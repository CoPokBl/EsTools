package net.serble.estools.ServerApi.Implementations.Bukkit.Helpers;

import net.serble.estools.Main;
import net.serble.estools.ServerApi.EsSound;

/**
 *  This class converts the Sound.name() to an EsSound, EsSounds use the sound key and Sound.name() is a semi arbitrary
 *  name, since there is no way to differenciate between underscores and dots in Sound.name() names,
 *  I generated a switch statement that converts between them.
 * <p>
 *  This was generated from minecraft 1.16.5, newer versions can use Sound.getKey().getKey() to get this info.
 * <p>
 *  Unfortunately, some old keys will be different, but i made Records convert to the new types.
 */
public class BukkitSoundEnumConverter {
    public static String convertKeyToEnum(EsSound sound) {
        String key = sound.getKey();

        // music discs used ot be called records
        if (Main.minecraftVersion.getMinor() <= 12) {
            switch (key) {
                case "music_disc.11": return "RECORD_11";
                case "music_disc.13": return "RECORD_13";
                case "music_disc.blocks": return "RECORD_BLOCKS";
                case "music_disc.cat": return "RECORD_CAT";
                case "music_disc.chirp": return "RECORD_CHIRP";
                case "music_disc.far": return "RECORD_FAR";
                case "music_disc.mall": return "RECORD_MALL";
                case "music_disc.mellohi": return "RECORD_MELLOHI";
                case "music_disc.stal": return "RECORD_STAL";
                case "music_disc.strad": return "RECORD_STRAD";
                case "music_disc.wait": return "RECORD_WAIT";
                case "music_disc.ward": return "RECORD_WARD";
            }
        }

        return key.toUpperCase().replace('.', '_');
    }

    public static EsSound convertEnumToKey(String eVal) {
        switch (eVal) {
            case "AMBIENT_BASALT_DELTAS_ADDITIONS": return EsSound.createUnchecked("ambient.basalt_deltas.additions");
            case "AMBIENT_BASALT_DELTAS_LOOP": return EsSound.createUnchecked("ambient.basalt_deltas.loop");
            case "AMBIENT_BASALT_DELTAS_MOOD": return EsSound.createUnchecked("ambient.basalt_deltas.mood");
            case "AMBIENT_CAVE": return EsSound.createUnchecked("ambient.cave");
            case "AMBIENT_CRIMSON_FOREST_ADDITIONS": return EsSound.createUnchecked("ambient.crimson_forest.additions");
            case "AMBIENT_CRIMSON_FOREST_LOOP": return EsSound.createUnchecked("ambient.crimson_forest.loop");
            case "AMBIENT_CRIMSON_FOREST_MOOD": return EsSound.createUnchecked("ambient.crimson_forest.mood");
            case "AMBIENT_NETHER_WASTES_ADDITIONS": return EsSound.createUnchecked("ambient.nether_wastes.additions");
            case "AMBIENT_NETHER_WASTES_LOOP": return EsSound.createUnchecked("ambient.nether_wastes.loop");
            case "AMBIENT_NETHER_WASTES_MOOD": return EsSound.createUnchecked("ambient.nether_wastes.mood");
            case "AMBIENT_SOUL_SAND_VALLEY_ADDITIONS": return EsSound.createUnchecked("ambient.soul_sand_valley.additions");
            case "AMBIENT_SOUL_SAND_VALLEY_LOOP": return EsSound.createUnchecked("ambient.soul_sand_valley.loop");
            case "AMBIENT_SOUL_SAND_VALLEY_MOOD": return EsSound.createUnchecked("ambient.soul_sand_valley.mood");
            case "AMBIENT_UNDERWATER_ENTER": return EsSound.createUnchecked("ambient.underwater.enter");
            case "AMBIENT_UNDERWATER_EXIT": return EsSound.createUnchecked("ambient.underwater.exit");
            case "AMBIENT_UNDERWATER_LOOP": return EsSound.createUnchecked("ambient.underwater.loop");
            case "AMBIENT_UNDERWATER_LOOP_ADDITIONS": return EsSound.createUnchecked("ambient.underwater.loop.additions");
            case "AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE": return EsSound.createUnchecked("ambient.underwater.loop.additions.rare");
            case "AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE": return EsSound.createUnchecked("ambient.underwater.loop.additions.ultra_rare");
            case "AMBIENT_WARPED_FOREST_ADDITIONS": return EsSound.createUnchecked("ambient.warped_forest.additions");
            case "AMBIENT_WARPED_FOREST_LOOP": return EsSound.createUnchecked("ambient.warped_forest.loop");
            case "AMBIENT_WARPED_FOREST_MOOD": return EsSound.createUnchecked("ambient.warped_forest.mood");
            case "BLOCK_ANCIENT_DEBRIS_BREAK": return EsSound.createUnchecked("block.ancient_debris.break");
            case "BLOCK_ANCIENT_DEBRIS_FALL": return EsSound.createUnchecked("block.ancient_debris.fall");
            case "BLOCK_ANCIENT_DEBRIS_HIT": return EsSound.createUnchecked("block.ancient_debris.hit");
            case "BLOCK_ANCIENT_DEBRIS_PLACE": return EsSound.createUnchecked("block.ancient_debris.place");
            case "BLOCK_ANCIENT_DEBRIS_STEP": return EsSound.createUnchecked("block.ancient_debris.step");
            case "BLOCK_ANVIL_BREAK": return EsSound.createUnchecked("block.anvil.break");
            case "BLOCK_ANVIL_DESTROY": return EsSound.createUnchecked("block.anvil.destroy");
            case "BLOCK_ANVIL_FALL": return EsSound.createUnchecked("block.anvil.fall");
            case "BLOCK_ANVIL_HIT": return EsSound.createUnchecked("block.anvil.hit");
            case "BLOCK_ANVIL_LAND": return EsSound.createUnchecked("block.anvil.land");
            case "BLOCK_ANVIL_PLACE": return EsSound.createUnchecked("block.anvil.place");
            case "BLOCK_ANVIL_STEP": return EsSound.createUnchecked("block.anvil.step");
            case "BLOCK_ANVIL_USE": return EsSound.createUnchecked("block.anvil.use");
            case "BLOCK_BAMBOO_BREAK": return EsSound.createUnchecked("block.bamboo.break");
            case "BLOCK_BAMBOO_FALL": return EsSound.createUnchecked("block.bamboo.fall");
            case "BLOCK_BAMBOO_HIT": return EsSound.createUnchecked("block.bamboo.hit");
            case "BLOCK_BAMBOO_PLACE": return EsSound.createUnchecked("block.bamboo.place");
            case "BLOCK_BAMBOO_SAPLING_BREAK": return EsSound.createUnchecked("block.bamboo_sapling.break");
            case "BLOCK_BAMBOO_SAPLING_HIT": return EsSound.createUnchecked("block.bamboo_sapling.hit");
            case "BLOCK_BAMBOO_SAPLING_PLACE": return EsSound.createUnchecked("block.bamboo_sapling.place");
            case "BLOCK_BAMBOO_STEP": return EsSound.createUnchecked("block.bamboo.step");
            case "BLOCK_BARREL_CLOSE": return EsSound.createUnchecked("block.barrel.close");
            case "BLOCK_BARREL_OPEN": return EsSound.createUnchecked("block.barrel.open");
            case "BLOCK_BASALT_BREAK": return EsSound.createUnchecked("block.basalt.break");
            case "BLOCK_BASALT_FALL": return EsSound.createUnchecked("block.basalt.fall");
            case "BLOCK_BASALT_HIT": return EsSound.createUnchecked("block.basalt.hit");
            case "BLOCK_BASALT_PLACE": return EsSound.createUnchecked("block.basalt.place");
            case "BLOCK_BASALT_STEP": return EsSound.createUnchecked("block.basalt.step");
            case "BLOCK_BEACON_ACTIVATE": return EsSound.createUnchecked("block.beacon.activate");
            case "BLOCK_BEACON_AMBIENT": return EsSound.createUnchecked("block.beacon.ambient");
            case "BLOCK_BEACON_DEACTIVATE": return EsSound.createUnchecked("block.beacon.deactivate");
            case "BLOCK_BEACON_POWER_SELECT": return EsSound.createUnchecked("block.beacon.power_select");
            case "BLOCK_BEEHIVE_DRIP": return EsSound.createUnchecked("block.beehive.drip");
            case "BLOCK_BEEHIVE_ENTER": return EsSound.createUnchecked("block.beehive.enter");
            case "BLOCK_BEEHIVE_EXIT": return EsSound.createUnchecked("block.beehive.exit");
            case "BLOCK_BEEHIVE_SHEAR": return EsSound.createUnchecked("block.beehive.shear");
            case "BLOCK_BEEHIVE_WORK": return EsSound.createUnchecked("block.beehive.work");
            case "BLOCK_BELL_RESONATE": return EsSound.createUnchecked("block.bell.resonate");
            case "BLOCK_BELL_USE": return EsSound.createUnchecked("block.bell.use");
            case "BLOCK_BLASTFURNACE_FIRE_CRACKLE": return EsSound.createUnchecked("block.blastfurnace.fire_crackle");
            case "BLOCK_BONE_BLOCK_BREAK": return EsSound.createUnchecked("block.bone_block.break");
            case "BLOCK_BONE_BLOCK_FALL": return EsSound.createUnchecked("block.bone_block.fall");
            case "BLOCK_BONE_BLOCK_HIT": return EsSound.createUnchecked("block.bone_block.hit");
            case "BLOCK_BONE_BLOCK_PLACE": return EsSound.createUnchecked("block.bone_block.place");
            case "BLOCK_BONE_BLOCK_STEP": return EsSound.createUnchecked("block.bone_block.step");
            case "BLOCK_BREWING_STAND_BREW": return EsSound.createUnchecked("block.brewing_stand.brew");
            case "BLOCK_BUBBLE_COLUMN_BUBBLE_POP": return EsSound.createUnchecked("block.bubble_column.bubble_pop");
            case "BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT": return EsSound.createUnchecked("block.bubble_column.upwards_ambient");
            case "BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE": return EsSound.createUnchecked("block.bubble_column.upwards_inside");
            case "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT": return EsSound.createUnchecked("block.bubble_column.whirlpool_ambient");
            case "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE": return EsSound.createUnchecked("block.bubble_column.whirlpool_inside");
            case "BLOCK_CAMPFIRE_CRACKLE": return EsSound.createUnchecked("block.campfire.crackle");
            case "BLOCK_CHAIN_BREAK": return EsSound.createUnchecked("block.chain.break");
            case "BLOCK_CHAIN_FALL": return EsSound.createUnchecked("block.chain.fall");
            case "BLOCK_CHAIN_HIT": return EsSound.createUnchecked("block.chain.hit");
            case "BLOCK_CHAIN_PLACE": return EsSound.createUnchecked("block.chain.place");
            case "BLOCK_CHAIN_STEP": return EsSound.createUnchecked("block.chain.step");
            case "BLOCK_CHEST_CLOSE": return EsSound.createUnchecked("block.chest.close");
            case "BLOCK_CHEST_LOCKED": return EsSound.createUnchecked("block.chest.locked");
            case "BLOCK_CHEST_OPEN": return EsSound.createUnchecked("block.chest.open");
            case "BLOCK_CHORUS_FLOWER_DEATH": return EsSound.createUnchecked("block.chorus_flower.death");
            case "BLOCK_CHORUS_FLOWER_GROW": return EsSound.createUnchecked("block.chorus_flower.grow");
            case "BLOCK_COMPARATOR_CLICK": return EsSound.createUnchecked("block.comparator.click");
            case "BLOCK_COMPOSTER_EMPTY": return EsSound.createUnchecked("block.composter.empty");
            case "BLOCK_COMPOSTER_FILL": return EsSound.createUnchecked("block.composter.fill");
            case "BLOCK_COMPOSTER_FILL_SUCCESS": return EsSound.createUnchecked("block.composter.fill_success");
            case "BLOCK_COMPOSTER_READY": return EsSound.createUnchecked("block.composter.ready");
            case "BLOCK_CONDUIT_ACTIVATE": return EsSound.createUnchecked("block.conduit.activate");
            case "BLOCK_CONDUIT_AMBIENT": return EsSound.createUnchecked("block.conduit.ambient");
            case "BLOCK_CONDUIT_AMBIENT_SHORT": return EsSound.createUnchecked("block.conduit.ambient.short");
            case "BLOCK_CONDUIT_ATTACK_TARGET": return EsSound.createUnchecked("block.conduit.attack.target");
            case "BLOCK_CONDUIT_DEACTIVATE": return EsSound.createUnchecked("block.conduit.deactivate");
            case "BLOCK_CORAL_BLOCK_BREAK": return EsSound.createUnchecked("block.coral_block.break");
            case "BLOCK_CORAL_BLOCK_FALL": return EsSound.createUnchecked("block.coral_block.fall");
            case "BLOCK_CORAL_BLOCK_HIT": return EsSound.createUnchecked("block.coral_block.hit");
            case "BLOCK_CORAL_BLOCK_PLACE": return EsSound.createUnchecked("block.coral_block.place");
            case "BLOCK_CORAL_BLOCK_STEP": return EsSound.createUnchecked("block.coral_block.step");
            case "BLOCK_CROP_BREAK": return EsSound.createUnchecked("block.crop.break");
            case "BLOCK_DISPENSER_DISPENSE": return EsSound.createUnchecked("block.dispenser.dispense");
            case "BLOCK_DISPENSER_FAIL": return EsSound.createUnchecked("block.dispenser.fail");
            case "BLOCK_DISPENSER_LAUNCH": return EsSound.createUnchecked("block.dispenser.launch");
            case "BLOCK_ENCHANTMENT_TABLE_USE": return EsSound.createUnchecked("block.enchantment_table.use");
            case "BLOCK_ENDER_CHEST_CLOSE": return EsSound.createUnchecked("block.ender_chest.close");
            case "BLOCK_ENDER_CHEST_OPEN": return EsSound.createUnchecked("block.ender_chest.open");
            case "BLOCK_END_GATEWAY_SPAWN": return EsSound.createUnchecked("block.end_gateway.spawn");
            case "BLOCK_END_PORTAL_FRAME_FILL": return EsSound.createUnchecked("block.end_portal_frame.fill");
            case "BLOCK_END_PORTAL_SPAWN": return EsSound.createUnchecked("block.end_portal.spawn");
            case "BLOCK_FENCE_GATE_CLOSE": return EsSound.createUnchecked("block.fence_gate.close");
            case "BLOCK_FENCE_GATE_OPEN": return EsSound.createUnchecked("block.fence_gate.open");
            case "BLOCK_FIRE_AMBIENT": return EsSound.createUnchecked("block.fire.ambient");
            case "BLOCK_FIRE_EXTINGUISH": return EsSound.createUnchecked("block.fire.extinguish");
            case "BLOCK_FUNGUS_BREAK": return EsSound.createUnchecked("block.fungus.break");
            case "BLOCK_FUNGUS_FALL": return EsSound.createUnchecked("block.fungus.fall");
            case "BLOCK_FUNGUS_HIT": return EsSound.createUnchecked("block.fungus.hit");
            case "BLOCK_FUNGUS_PLACE": return EsSound.createUnchecked("block.fungus.place");
            case "BLOCK_FUNGUS_STEP": return EsSound.createUnchecked("block.fungus.step");
            case "BLOCK_FURNACE_FIRE_CRACKLE": return EsSound.createUnchecked("block.furnace.fire_crackle");
            case "BLOCK_GILDED_BLACKSTONE_BREAK": return EsSound.createUnchecked("block.gilded_blackstone.break");
            case "BLOCK_GILDED_BLACKSTONE_FALL": return EsSound.createUnchecked("block.gilded_blackstone.fall");
            case "BLOCK_GILDED_BLACKSTONE_HIT": return EsSound.createUnchecked("block.gilded_blackstone.hit");
            case "BLOCK_GILDED_BLACKSTONE_PLACE": return EsSound.createUnchecked("block.gilded_blackstone.place");
            case "BLOCK_GILDED_BLACKSTONE_STEP": return EsSound.createUnchecked("block.gilded_blackstone.step");
            case "BLOCK_GLASS_BREAK": return EsSound.createUnchecked("block.glass.break");
            case "BLOCK_GLASS_FALL": return EsSound.createUnchecked("block.glass.fall");
            case "BLOCK_GLASS_HIT": return EsSound.createUnchecked("block.glass.hit");
            case "BLOCK_GLASS_PLACE": return EsSound.createUnchecked("block.glass.place");
            case "BLOCK_GLASS_STEP": return EsSound.createUnchecked("block.glass.step");
            case "BLOCK_GRASS_BREAK": return EsSound.createUnchecked("block.grass.break");
            case "BLOCK_GRASS_FALL": return EsSound.createUnchecked("block.grass.fall");
            case "BLOCK_GRASS_HIT": return EsSound.createUnchecked("block.grass.hit");
            case "BLOCK_GRASS_PLACE": return EsSound.createUnchecked("block.grass.place");
            case "BLOCK_GRASS_STEP": return EsSound.createUnchecked("block.grass.step");
            case "BLOCK_GRAVEL_BREAK": return EsSound.createUnchecked("block.gravel.break");
            case "BLOCK_GRAVEL_FALL": return EsSound.createUnchecked("block.gravel.fall");
            case "BLOCK_GRAVEL_HIT": return EsSound.createUnchecked("block.gravel.hit");
            case "BLOCK_GRAVEL_PLACE": return EsSound.createUnchecked("block.gravel.place");
            case "BLOCK_GRAVEL_STEP": return EsSound.createUnchecked("block.gravel.step");
            case "BLOCK_GRINDSTONE_USE": return EsSound.createUnchecked("block.grindstone.use");
            case "BLOCK_HONEY_BLOCK_BREAK": return EsSound.createUnchecked("block.honey_block.break");
            case "BLOCK_HONEY_BLOCK_FALL": return EsSound.createUnchecked("block.honey_block.fall");
            case "BLOCK_HONEY_BLOCK_HIT": return EsSound.createUnchecked("block.honey_block.hit");
            case "BLOCK_HONEY_BLOCK_PLACE": return EsSound.createUnchecked("block.honey_block.place");
            case "BLOCK_HONEY_BLOCK_SLIDE": return EsSound.createUnchecked("block.honey_block.slide");
            case "BLOCK_HONEY_BLOCK_STEP": return EsSound.createUnchecked("block.honey_block.step");
            case "BLOCK_IRON_DOOR_CLOSE": return EsSound.createUnchecked("block.iron_door.close");
            case "BLOCK_IRON_DOOR_OPEN": return EsSound.createUnchecked("block.iron_door.open");
            case "BLOCK_IRON_TRAPDOOR_CLOSE": return EsSound.createUnchecked("block.iron_trapdoor.close");
            case "BLOCK_IRON_TRAPDOOR_OPEN": return EsSound.createUnchecked("block.iron_trapdoor.open");
            case "BLOCK_LADDER_BREAK": return EsSound.createUnchecked("block.ladder.break");
            case "BLOCK_LADDER_FALL": return EsSound.createUnchecked("block.ladder.fall");
            case "BLOCK_LADDER_HIT": return EsSound.createUnchecked("block.ladder.hit");
            case "BLOCK_LADDER_PLACE": return EsSound.createUnchecked("block.ladder.place");
            case "BLOCK_LADDER_STEP": return EsSound.createUnchecked("block.ladder.step");
            case "BLOCK_LANTERN_BREAK": return EsSound.createUnchecked("block.lantern.break");
            case "BLOCK_LANTERN_FALL": return EsSound.createUnchecked("block.lantern.fall");
            case "BLOCK_LANTERN_HIT": return EsSound.createUnchecked("block.lantern.hit");
            case "BLOCK_LANTERN_PLACE": return EsSound.createUnchecked("block.lantern.place");
            case "BLOCK_LANTERN_STEP": return EsSound.createUnchecked("block.lantern.step");
            case "BLOCK_LAVA_AMBIENT": return EsSound.createUnchecked("block.lava.ambient");
            case "BLOCK_LAVA_EXTINGUISH": return EsSound.createUnchecked("block.lava.extinguish");
            case "BLOCK_LAVA_POP": return EsSound.createUnchecked("block.lava.pop");
            case "BLOCK_LEVER_CLICK": return EsSound.createUnchecked("block.lever.click");
            case "BLOCK_LILY_PAD_PLACE": return EsSound.createUnchecked("block.lily_pad.place");
            case "BLOCK_LODESTONE_BREAK": return EsSound.createUnchecked("block.lodestone.break");
            case "BLOCK_LODESTONE_FALL": return EsSound.createUnchecked("block.lodestone.fall");
            case "BLOCK_LODESTONE_HIT": return EsSound.createUnchecked("block.lodestone.hit");
            case "BLOCK_LODESTONE_PLACE": return EsSound.createUnchecked("block.lodestone.place");
            case "BLOCK_LODESTONE_STEP": return EsSound.createUnchecked("block.lodestone.step");
            case "BLOCK_METAL_BREAK": return EsSound.createUnchecked("block.metal.break");
            case "BLOCK_METAL_FALL": return EsSound.createUnchecked("block.metal.fall");
            case "BLOCK_METAL_HIT": return EsSound.createUnchecked("block.metal.hit");
            case "BLOCK_METAL_PLACE": return EsSound.createUnchecked("block.metal.place");
            case "BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF": return EsSound.createUnchecked("block.metal_pressure_plate.click_off");
            case "BLOCK_METAL_PRESSURE_PLATE_CLICK_ON": return EsSound.createUnchecked("block.metal_pressure_plate.click_on");
            case "BLOCK_METAL_STEP": return EsSound.createUnchecked("block.metal.step");
            case "BLOCK_NETHERITE_BLOCK_BREAK": return EsSound.createUnchecked("block.netherite_block.break");
            case "BLOCK_NETHERITE_BLOCK_FALL": return EsSound.createUnchecked("block.netherite_block.fall");
            case "BLOCK_NETHERITE_BLOCK_HIT": return EsSound.createUnchecked("block.netherite_block.hit");
            case "BLOCK_NETHERITE_BLOCK_PLACE": return EsSound.createUnchecked("block.netherite_block.place");
            case "BLOCK_NETHERITE_BLOCK_STEP": return EsSound.createUnchecked("block.netherite_block.step");
            case "BLOCK_NETHERRACK_BREAK": return EsSound.createUnchecked("block.netherrack.break");
            case "BLOCK_NETHERRACK_FALL": return EsSound.createUnchecked("block.netherrack.fall");
            case "BLOCK_NETHERRACK_HIT": return EsSound.createUnchecked("block.netherrack.hit");
            case "BLOCK_NETHERRACK_PLACE": return EsSound.createUnchecked("block.netherrack.place");
            case "BLOCK_NETHERRACK_STEP": return EsSound.createUnchecked("block.netherrack.step");
            case "BLOCK_NETHER_BRICKS_BREAK": return EsSound.createUnchecked("block.nether_bricks.break");
            case "BLOCK_NETHER_BRICKS_FALL": return EsSound.createUnchecked("block.nether_bricks.fall");
            case "BLOCK_NETHER_BRICKS_HIT": return EsSound.createUnchecked("block.nether_bricks.hit");
            case "BLOCK_NETHER_BRICKS_PLACE": return EsSound.createUnchecked("block.nether_bricks.place");
            case "BLOCK_NETHER_BRICKS_STEP": return EsSound.createUnchecked("block.nether_bricks.step");
            case "BLOCK_NETHER_GOLD_ORE_BREAK": return EsSound.createUnchecked("block.nether_gold_ore.break");
            case "BLOCK_NETHER_GOLD_ORE_FALL": return EsSound.createUnchecked("block.nether_gold_ore.fall");
            case "BLOCK_NETHER_GOLD_ORE_HIT": return EsSound.createUnchecked("block.nether_gold_ore.hit");
            case "BLOCK_NETHER_GOLD_ORE_PLACE": return EsSound.createUnchecked("block.nether_gold_ore.place");
            case "BLOCK_NETHER_GOLD_ORE_STEP": return EsSound.createUnchecked("block.nether_gold_ore.step");
            case "BLOCK_NETHER_ORE_BREAK": return EsSound.createUnchecked("block.nether_ore.break");
            case "BLOCK_NETHER_ORE_FALL": return EsSound.createUnchecked("block.nether_ore.fall");
            case "BLOCK_NETHER_ORE_HIT": return EsSound.createUnchecked("block.nether_ore.hit");
            case "BLOCK_NETHER_ORE_PLACE": return EsSound.createUnchecked("block.nether_ore.place");
            case "BLOCK_NETHER_ORE_STEP": return EsSound.createUnchecked("block.nether_ore.step");
            case "BLOCK_NETHER_SPROUTS_BREAK": return EsSound.createUnchecked("block.nether_sprouts.break");
            case "BLOCK_NETHER_SPROUTS_FALL": return EsSound.createUnchecked("block.nether_sprouts.fall");
            case "BLOCK_NETHER_SPROUTS_HIT": return EsSound.createUnchecked("block.nether_sprouts.hit");
            case "BLOCK_NETHER_SPROUTS_PLACE": return EsSound.createUnchecked("block.nether_sprouts.place");
            case "BLOCK_NETHER_SPROUTS_STEP": return EsSound.createUnchecked("block.nether_sprouts.step");
            case "BLOCK_NETHER_WART_BREAK": return EsSound.createUnchecked("block.nether_wart.break");
            case "BLOCK_NOTE_BLOCK_BANJO": return EsSound.createUnchecked("block.note_block.banjo");
            case "BLOCK_NOTE_BLOCK_BASEDRUM": return EsSound.createUnchecked("block.note_block.basedrum");
            case "BLOCK_NOTE_BLOCK_BASS": return EsSound.createUnchecked("block.note_block.bass");
            case "BLOCK_NOTE_BLOCK_BELL": return EsSound.createUnchecked("block.note_block.bell");
            case "BLOCK_NOTE_BLOCK_BIT": return EsSound.createUnchecked("block.note_block.bit");
            case "BLOCK_NOTE_BLOCK_CHIME": return EsSound.createUnchecked("block.note_block.chime");
            case "BLOCK_NOTE_BLOCK_COW_BELL": return EsSound.createUnchecked("block.note_block.cow_bell");
            case "BLOCK_NOTE_BLOCK_DIDGERIDOO": return EsSound.createUnchecked("block.note_block.didgeridoo");
            case "BLOCK_NOTE_BLOCK_FLUTE": return EsSound.createUnchecked("block.note_block.flute");
            case "BLOCK_NOTE_BLOCK_GUITAR": return EsSound.createUnchecked("block.note_block.guitar");
            case "BLOCK_NOTE_BLOCK_HARP": return EsSound.createUnchecked("block.note_block.harp");
            case "BLOCK_NOTE_BLOCK_HAT": return EsSound.createUnchecked("block.note_block.hat");
            case "BLOCK_NOTE_BLOCK_IRON_XYLOPHONE": return EsSound.createUnchecked("block.note_block.iron_xylophone");
            case "BLOCK_NOTE_BLOCK_PLING": return EsSound.createUnchecked("block.note_block.pling");
            case "BLOCK_NOTE_BLOCK_SNARE": return EsSound.createUnchecked("block.note_block.snare");
            case "BLOCK_NOTE_BLOCK_XYLOPHONE": return EsSound.createUnchecked("block.note_block.xylophone");
            case "BLOCK_NYLIUM_BREAK": return EsSound.createUnchecked("block.nylium.break");
            case "BLOCK_NYLIUM_FALL": return EsSound.createUnchecked("block.nylium.fall");
            case "BLOCK_NYLIUM_HIT": return EsSound.createUnchecked("block.nylium.hit");
            case "BLOCK_NYLIUM_PLACE": return EsSound.createUnchecked("block.nylium.place");
            case "BLOCK_NYLIUM_STEP": return EsSound.createUnchecked("block.nylium.step");
            case "BLOCK_PISTON_CONTRACT": return EsSound.createUnchecked("block.piston.contract");
            case "BLOCK_PISTON_EXTEND": return EsSound.createUnchecked("block.piston.extend");
            case "BLOCK_PORTAL_AMBIENT": return EsSound.createUnchecked("block.portal.ambient");
            case "BLOCK_PORTAL_TRAVEL": return EsSound.createUnchecked("block.portal.travel");
            case "BLOCK_PORTAL_TRIGGER": return EsSound.createUnchecked("block.portal.trigger");
            case "BLOCK_PUMPKIN_CARVE": return EsSound.createUnchecked("block.pumpkin.carve");
            case "BLOCK_REDSTONE_TORCH_BURNOUT": return EsSound.createUnchecked("block.redstone_torch.burnout");
            case "BLOCK_RESPAWN_ANCHOR_AMBIENT": return EsSound.createUnchecked("block.respawn_anchor.ambient");
            case "BLOCK_RESPAWN_ANCHOR_CHARGE": return EsSound.createUnchecked("block.respawn_anchor.charge");
            case "BLOCK_RESPAWN_ANCHOR_DEPLETE": return EsSound.createUnchecked("block.respawn_anchor.deplete");
            case "BLOCK_RESPAWN_ANCHOR_SET_SPAWN": return EsSound.createUnchecked("block.respawn_anchor.set_spawn");
            case "BLOCK_ROOTS_BREAK": return EsSound.createUnchecked("block.roots.break");
            case "BLOCK_ROOTS_FALL": return EsSound.createUnchecked("block.roots.fall");
            case "BLOCK_ROOTS_HIT": return EsSound.createUnchecked("block.roots.hit");
            case "BLOCK_ROOTS_PLACE": return EsSound.createUnchecked("block.roots.place");
            case "BLOCK_ROOTS_STEP": return EsSound.createUnchecked("block.roots.step");
            case "BLOCK_SAND_BREAK": return EsSound.createUnchecked("block.sand.break");
            case "BLOCK_SAND_FALL": return EsSound.createUnchecked("block.sand.fall");
            case "BLOCK_SAND_HIT": return EsSound.createUnchecked("block.sand.hit");
            case "BLOCK_SAND_PLACE": return EsSound.createUnchecked("block.sand.place");
            case "BLOCK_SAND_STEP": return EsSound.createUnchecked("block.sand.step");
            case "BLOCK_SCAFFOLDING_BREAK": return EsSound.createUnchecked("block.scaffolding.break");
            case "BLOCK_SCAFFOLDING_FALL": return EsSound.createUnchecked("block.scaffolding.fall");
            case "BLOCK_SCAFFOLDING_HIT": return EsSound.createUnchecked("block.scaffolding.hit");
            case "BLOCK_SCAFFOLDING_PLACE": return EsSound.createUnchecked("block.scaffolding.place");
            case "BLOCK_SCAFFOLDING_STEP": return EsSound.createUnchecked("block.scaffolding.step");
            case "BLOCK_SHROOMLIGHT_BREAK": return EsSound.createUnchecked("block.shroomlight.break");
            case "BLOCK_SHROOMLIGHT_FALL": return EsSound.createUnchecked("block.shroomlight.fall");
            case "BLOCK_SHROOMLIGHT_HIT": return EsSound.createUnchecked("block.shroomlight.hit");
            case "BLOCK_SHROOMLIGHT_PLACE": return EsSound.createUnchecked("block.shroomlight.place");
            case "BLOCK_SHROOMLIGHT_STEP": return EsSound.createUnchecked("block.shroomlight.step");
            case "BLOCK_SHULKER_BOX_CLOSE": return EsSound.createUnchecked("block.shulker_box.close");
            case "BLOCK_SHULKER_BOX_OPEN": return EsSound.createUnchecked("block.shulker_box.open");
            case "BLOCK_SLIME_BLOCK_BREAK": return EsSound.createUnchecked("block.slime_block.break");
            case "BLOCK_SLIME_BLOCK_FALL": return EsSound.createUnchecked("block.slime_block.fall");
            case "BLOCK_SLIME_BLOCK_HIT": return EsSound.createUnchecked("block.slime_block.hit");
            case "BLOCK_SLIME_BLOCK_PLACE": return EsSound.createUnchecked("block.slime_block.place");
            case "BLOCK_SLIME_BLOCK_STEP": return EsSound.createUnchecked("block.slime_block.step");
            case "BLOCK_SMITHING_TABLE_USE": return EsSound.createUnchecked("block.smithing_table.use");
            case "BLOCK_SMOKER_SMOKE": return EsSound.createUnchecked("block.smoker.smoke");
            case "BLOCK_SNOW_BREAK": return EsSound.createUnchecked("block.snow.break");
            case "BLOCK_SNOW_FALL": return EsSound.createUnchecked("block.snow.fall");
            case "BLOCK_SNOW_HIT": return EsSound.createUnchecked("block.snow.hit");
            case "BLOCK_SNOW_PLACE": return EsSound.createUnchecked("block.snow.place");
            case "BLOCK_SNOW_STEP": return EsSound.createUnchecked("block.snow.step");
            case "BLOCK_SOUL_SAND_BREAK": return EsSound.createUnchecked("block.soul_sand.break");
            case "BLOCK_SOUL_SAND_FALL": return EsSound.createUnchecked("block.soul_sand.fall");
            case "BLOCK_SOUL_SAND_HIT": return EsSound.createUnchecked("block.soul_sand.hit");
            case "BLOCK_SOUL_SAND_PLACE": return EsSound.createUnchecked("block.soul_sand.place");
            case "BLOCK_SOUL_SAND_STEP": return EsSound.createUnchecked("block.soul_sand.step");
            case "BLOCK_SOUL_SOIL_BREAK": return EsSound.createUnchecked("block.soul_soil.break");
            case "BLOCK_SOUL_SOIL_FALL": return EsSound.createUnchecked("block.soul_soil.fall");
            case "BLOCK_SOUL_SOIL_HIT": return EsSound.createUnchecked("block.soul_soil.hit");
            case "BLOCK_SOUL_SOIL_PLACE": return EsSound.createUnchecked("block.soul_soil.place");
            case "BLOCK_SOUL_SOIL_STEP": return EsSound.createUnchecked("block.soul_soil.step");
            case "BLOCK_STEM_BREAK": return EsSound.createUnchecked("block.stem.break");
            case "BLOCK_STEM_FALL": return EsSound.createUnchecked("block.stem.fall");
            case "BLOCK_STEM_HIT": return EsSound.createUnchecked("block.stem.hit");
            case "BLOCK_STEM_PLACE": return EsSound.createUnchecked("block.stem.place");
            case "BLOCK_STEM_STEP": return EsSound.createUnchecked("block.stem.step");
            case "BLOCK_STONE_BREAK": return EsSound.createUnchecked("block.stone.break");
            case "BLOCK_STONE_BUTTON_CLICK_OFF": return EsSound.createUnchecked("block.stone_button.click_off");
            case "BLOCK_STONE_BUTTON_CLICK_ON": return EsSound.createUnchecked("block.stone_button.click_on");
            case "BLOCK_STONE_FALL": return EsSound.createUnchecked("block.stone.fall");
            case "BLOCK_STONE_HIT": return EsSound.createUnchecked("block.stone.hit");
            case "BLOCK_STONE_PLACE": return EsSound.createUnchecked("block.stone.place");
            case "BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF": return EsSound.createUnchecked("block.stone_pressure_plate.click_off");
            case "BLOCK_STONE_PRESSURE_PLATE_CLICK_ON": return EsSound.createUnchecked("block.stone_pressure_plate.click_on");
            case "BLOCK_STONE_STEP": return EsSound.createUnchecked("block.stone.step");
            case "BLOCK_SWEET_BERRY_BUSH_BREAK": return EsSound.createUnchecked("block.sweet_berry_bush.break");
            case "BLOCK_SWEET_BERRY_BUSH_PLACE": return EsSound.createUnchecked("block.sweet_berry_bush.place");
            case "BLOCK_TRIPWIRE_ATTACH": return EsSound.createUnchecked("block.tripwire.attach");
            case "BLOCK_TRIPWIRE_CLICK_OFF": return EsSound.createUnchecked("block.tripwire.click_off");
            case "BLOCK_TRIPWIRE_CLICK_ON": return EsSound.createUnchecked("block.tripwire.click_on");
            case "BLOCK_TRIPWIRE_DETACH": return EsSound.createUnchecked("block.tripwire.detach");
            case "BLOCK_VINE_STEP": return EsSound.createUnchecked("block.vine.step");
            case "BLOCK_WART_BLOCK_BREAK": return EsSound.createUnchecked("block.wart_block.break");
            case "BLOCK_WART_BLOCK_FALL": return EsSound.createUnchecked("block.wart_block.fall");
            case "BLOCK_WART_BLOCK_HIT": return EsSound.createUnchecked("block.wart_block.hit");
            case "BLOCK_WART_BLOCK_PLACE": return EsSound.createUnchecked("block.wart_block.place");
            case "BLOCK_WART_BLOCK_STEP": return EsSound.createUnchecked("block.wart_block.step");
            case "BLOCK_WATER_AMBIENT": return EsSound.createUnchecked("block.water.ambient");
            case "BLOCK_WEEPING_VINES_BREAK": return EsSound.createUnchecked("block.weeping_vines.break");
            case "BLOCK_WEEPING_VINES_FALL": return EsSound.createUnchecked("block.weeping_vines.fall");
            case "BLOCK_WEEPING_VINES_HIT": return EsSound.createUnchecked("block.weeping_vines.hit");
            case "BLOCK_WEEPING_VINES_PLACE": return EsSound.createUnchecked("block.weeping_vines.place");
            case "BLOCK_WEEPING_VINES_STEP": return EsSound.createUnchecked("block.weeping_vines.step");
            case "BLOCK_WET_GRASS_BREAK": return EsSound.createUnchecked("block.wet_grass.break");
            case "BLOCK_WET_GRASS_FALL": return EsSound.createUnchecked("block.wet_grass.fall");
            case "BLOCK_WET_GRASS_HIT": return EsSound.createUnchecked("block.wet_grass.hit");
            case "BLOCK_WET_GRASS_PLACE": return EsSound.createUnchecked("block.wet_grass.place");
            case "BLOCK_WET_GRASS_STEP": return EsSound.createUnchecked("block.wet_grass.step");
            case "BLOCK_WOODEN_BUTTON_CLICK_OFF": return EsSound.createUnchecked("block.wooden_button.click_off");
            case "BLOCK_WOODEN_BUTTON_CLICK_ON": return EsSound.createUnchecked("block.wooden_button.click_on");
            case "BLOCK_WOODEN_DOOR_CLOSE": return EsSound.createUnchecked("block.wooden_door.close");
            case "BLOCK_WOODEN_DOOR_OPEN": return EsSound.createUnchecked("block.wooden_door.open");
            case "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF": return EsSound.createUnchecked("block.wooden_pressure_plate.click_off");
            case "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON": return EsSound.createUnchecked("block.wooden_pressure_plate.click_on");
            case "BLOCK_WOODEN_TRAPDOOR_CLOSE": return EsSound.createUnchecked("block.wooden_trapdoor.close");
            case "BLOCK_WOODEN_TRAPDOOR_OPEN": return EsSound.createUnchecked("block.wooden_trapdoor.open");
            case "BLOCK_WOOD_BREAK": return EsSound.createUnchecked("block.wood.break");
            case "BLOCK_WOOD_FALL": return EsSound.createUnchecked("block.wood.fall");
            case "BLOCK_WOOD_HIT": return EsSound.createUnchecked("block.wood.hit");
            case "BLOCK_WOOD_PLACE": return EsSound.createUnchecked("block.wood.place");
            case "BLOCK_WOOD_STEP": return EsSound.createUnchecked("block.wood.step");
            case "BLOCK_WOOL_BREAK": return EsSound.createUnchecked("block.wool.break");
            case "BLOCK_WOOL_FALL": return EsSound.createUnchecked("block.wool.fall");
            case "BLOCK_WOOL_HIT": return EsSound.createUnchecked("block.wool.hit");
            case "BLOCK_WOOL_PLACE": return EsSound.createUnchecked("block.wool.place");
            case "BLOCK_WOOL_STEP": return EsSound.createUnchecked("block.wool.step");
            case "ENCHANT_THORNS_HIT": return EsSound.createUnchecked("enchant.thorns.hit");
            case "ENTITY_ARMOR_STAND_BREAK": return EsSound.createUnchecked("entity.armor_stand.break");
            case "ENTITY_ARMOR_STAND_FALL": return EsSound.createUnchecked("entity.armor_stand.fall");
            case "ENTITY_ARMOR_STAND_HIT": return EsSound.createUnchecked("entity.armor_stand.hit");
            case "ENTITY_ARMOR_STAND_PLACE": return EsSound.createUnchecked("entity.armor_stand.place");
            case "ENTITY_ARROW_HIT": return EsSound.createUnchecked("entity.arrow.hit");
            case "ENTITY_ARROW_HIT_PLAYER": return EsSound.createUnchecked("entity.arrow.hit_player");
            case "ENTITY_ARROW_SHOOT": return EsSound.createUnchecked("entity.arrow.shoot");
            case "ENTITY_BAT_AMBIENT": return EsSound.createUnchecked("entity.bat.ambient");
            case "ENTITY_BAT_DEATH": return EsSound.createUnchecked("entity.bat.death");
            case "ENTITY_BAT_HURT": return EsSound.createUnchecked("entity.bat.hurt");
            case "ENTITY_BAT_LOOP": return EsSound.createUnchecked("entity.bat.loop");
            case "ENTITY_BAT_TAKEOFF": return EsSound.createUnchecked("entity.bat.takeoff");
            case "ENTITY_BEE_DEATH": return EsSound.createUnchecked("entity.bee.death");
            case "ENTITY_BEE_HURT": return EsSound.createUnchecked("entity.bee.hurt");
            case "ENTITY_BEE_LOOP": return EsSound.createUnchecked("entity.bee.loop");
            case "ENTITY_BEE_LOOP_AGGRESSIVE": return EsSound.createUnchecked("entity.bee.loop_aggressive");
            case "ENTITY_BEE_POLLINATE": return EsSound.createUnchecked("entity.bee.pollinate");
            case "ENTITY_BEE_STING": return EsSound.createUnchecked("entity.bee.sting");
            case "ENTITY_BLAZE_AMBIENT": return EsSound.createUnchecked("entity.blaze.ambient");
            case "ENTITY_BLAZE_BURN": return EsSound.createUnchecked("entity.blaze.burn");
            case "ENTITY_BLAZE_DEATH": return EsSound.createUnchecked("entity.blaze.death");
            case "ENTITY_BLAZE_HURT": return EsSound.createUnchecked("entity.blaze.hurt");
            case "ENTITY_BLAZE_SHOOT": return EsSound.createUnchecked("entity.blaze.shoot");
            case "ENTITY_BOAT_PADDLE_LAND": return EsSound.createUnchecked("entity.boat.paddle_land");
            case "ENTITY_BOAT_PADDLE_WATER": return EsSound.createUnchecked("entity.boat.paddle_water");
            case "ENTITY_CAT_AMBIENT": return EsSound.createUnchecked("entity.cat.ambient");
            case "ENTITY_CAT_BEG_FOR_FOOD": return EsSound.createUnchecked("entity.cat.beg_for_food");
            case "ENTITY_CAT_DEATH": return EsSound.createUnchecked("entity.cat.death");
            case "ENTITY_CAT_EAT": return EsSound.createUnchecked("entity.cat.eat");
            case "ENTITY_CAT_HISS": return EsSound.createUnchecked("entity.cat.hiss");
            case "ENTITY_CAT_HURT": return EsSound.createUnchecked("entity.cat.hurt");
            case "ENTITY_CAT_PURR": return EsSound.createUnchecked("entity.cat.purr");
            case "ENTITY_CAT_PURREOW": return EsSound.createUnchecked("entity.cat.purreow");
            case "ENTITY_CAT_STRAY_AMBIENT": return EsSound.createUnchecked("entity.cat.stray_ambient");
            case "ENTITY_CHICKEN_AMBIENT": return EsSound.createUnchecked("entity.chicken.ambient");
            case "ENTITY_CHICKEN_DEATH": return EsSound.createUnchecked("entity.chicken.death");
            case "ENTITY_CHICKEN_EGG": return EsSound.createUnchecked("entity.chicken.egg");
            case "ENTITY_CHICKEN_HURT": return EsSound.createUnchecked("entity.chicken.hurt");
            case "ENTITY_CHICKEN_STEP": return EsSound.createUnchecked("entity.chicken.step");
            case "ENTITY_COD_AMBIENT": return EsSound.createUnchecked("entity.cod.ambient");
            case "ENTITY_COD_DEATH": return EsSound.createUnchecked("entity.cod.death");
            case "ENTITY_COD_FLOP": return EsSound.createUnchecked("entity.cod.flop");
            case "ENTITY_COD_HURT": return EsSound.createUnchecked("entity.cod.hurt");
            case "ENTITY_COW_AMBIENT": return EsSound.createUnchecked("entity.cow.ambient");
            case "ENTITY_COW_DEATH": return EsSound.createUnchecked("entity.cow.death");
            case "ENTITY_COW_HURT": return EsSound.createUnchecked("entity.cow.hurt");
            case "ENTITY_COW_MILK": return EsSound.createUnchecked("entity.cow.milk");
            case "ENTITY_COW_STEP": return EsSound.createUnchecked("entity.cow.step");
            case "ENTITY_CREEPER_DEATH": return EsSound.createUnchecked("entity.creeper.death");
            case "ENTITY_CREEPER_HURT": return EsSound.createUnchecked("entity.creeper.hurt");
            case "ENTITY_CREEPER_PRIMED": return EsSound.createUnchecked("entity.creeper.primed");
            case "ENTITY_DOLPHIN_AMBIENT": return EsSound.createUnchecked("entity.dolphin.ambient");
            case "ENTITY_DOLPHIN_AMBIENT_WATER": return EsSound.createUnchecked("entity.dolphin.ambient_water");
            case "ENTITY_DOLPHIN_ATTACK": return EsSound.createUnchecked("entity.dolphin.attack");
            case "ENTITY_DOLPHIN_DEATH": return EsSound.createUnchecked("entity.dolphin.death");
            case "ENTITY_DOLPHIN_EAT": return EsSound.createUnchecked("entity.dolphin.eat");
            case "ENTITY_DOLPHIN_HURT": return EsSound.createUnchecked("entity.dolphin.hurt");
            case "ENTITY_DOLPHIN_JUMP": return EsSound.createUnchecked("entity.dolphin.jump");
            case "ENTITY_DOLPHIN_PLAY": return EsSound.createUnchecked("entity.dolphin.play");
            case "ENTITY_DOLPHIN_SPLASH": return EsSound.createUnchecked("entity.dolphin.splash");
            case "ENTITY_DOLPHIN_SWIM": return EsSound.createUnchecked("entity.dolphin.swim");
            case "ENTITY_DONKEY_AMBIENT": return EsSound.createUnchecked("entity.donkey.ambient");
            case "ENTITY_DONKEY_ANGRY": return EsSound.createUnchecked("entity.donkey.angry");
            case "ENTITY_DONKEY_CHEST": return EsSound.createUnchecked("entity.donkey.chest");
            case "ENTITY_DONKEY_DEATH": return EsSound.createUnchecked("entity.donkey.death");
            case "ENTITY_DONKEY_EAT": return EsSound.createUnchecked("entity.donkey.eat");
            case "ENTITY_DONKEY_HURT": return EsSound.createUnchecked("entity.donkey.hurt");
            case "ENTITY_DRAGON_FIREBALL_EXPLODE": return EsSound.createUnchecked("entity.dragon_fireball.explode");
            case "ENTITY_DROWNED_AMBIENT": return EsSound.createUnchecked("entity.drowned.ambient");
            case "ENTITY_DROWNED_AMBIENT_WATER": return EsSound.createUnchecked("entity.drowned.ambient_water");
            case "ENTITY_DROWNED_DEATH": return EsSound.createUnchecked("entity.drowned.death");
            case "ENTITY_DROWNED_DEATH_WATER": return EsSound.createUnchecked("entity.drowned.death_water");
            case "ENTITY_DROWNED_HURT": return EsSound.createUnchecked("entity.drowned.hurt");
            case "ENTITY_DROWNED_HURT_WATER": return EsSound.createUnchecked("entity.drowned.hurt_water");
            case "ENTITY_DROWNED_SHOOT": return EsSound.createUnchecked("entity.drowned.shoot");
            case "ENTITY_DROWNED_STEP": return EsSound.createUnchecked("entity.drowned.step");
            case "ENTITY_DROWNED_SWIM": return EsSound.createUnchecked("entity.drowned.swim");
            case "ENTITY_EGG_THROW": return EsSound.createUnchecked("entity.egg.throw");
            case "ENTITY_ELDER_GUARDIAN_AMBIENT": return EsSound.createUnchecked("entity.elder_guardian.ambient");
            case "ENTITY_ELDER_GUARDIAN_AMBIENT_LAND": return EsSound.createUnchecked("entity.elder_guardian.ambient_land");
            case "ENTITY_ELDER_GUARDIAN_CURSE": return EsSound.createUnchecked("entity.elder_guardian.curse");
            case "ENTITY_ELDER_GUARDIAN_DEATH": return EsSound.createUnchecked("entity.elder_guardian.death");
            case "ENTITY_ELDER_GUARDIAN_DEATH_LAND": return EsSound.createUnchecked("entity.elder_guardian.death_land");
            case "ENTITY_ELDER_GUARDIAN_FLOP": return EsSound.createUnchecked("entity.elder_guardian.flop");
            case "ENTITY_ELDER_GUARDIAN_HURT": return EsSound.createUnchecked("entity.elder_guardian.hurt");
            case "ENTITY_ELDER_GUARDIAN_HURT_LAND": return EsSound.createUnchecked("entity.elder_guardian.hurt_land");
            case "ENTITY_ENDERMAN_AMBIENT": return EsSound.createUnchecked("entity.enderman.ambient");
            case "ENTITY_ENDERMAN_DEATH": return EsSound.createUnchecked("entity.enderman.death");
            case "ENTITY_ENDERMAN_HURT": return EsSound.createUnchecked("entity.enderman.hurt");
            case "ENTITY_ENDERMAN_SCREAM": return EsSound.createUnchecked("entity.enderman.scream");
            case "ENTITY_ENDERMAN_STARE": return EsSound.createUnchecked("entity.enderman.stare");
            case "ENTITY_ENDERMAN_TELEPORT": return EsSound.createUnchecked("entity.enderman.teleport");
            case "ENTITY_ENDERMITE_AMBIENT": return EsSound.createUnchecked("entity.endermite.ambient");
            case "ENTITY_ENDERMITE_DEATH": return EsSound.createUnchecked("entity.endermite.death");
            case "ENTITY_ENDERMITE_HURT": return EsSound.createUnchecked("entity.endermite.hurt");
            case "ENTITY_ENDERMITE_STEP": return EsSound.createUnchecked("entity.endermite.step");
            case "ENTITY_ENDER_DRAGON_AMBIENT": return EsSound.createUnchecked("entity.ender_dragon.ambient");
            case "ENTITY_ENDER_DRAGON_DEATH": return EsSound.createUnchecked("entity.ender_dragon.death");
            case "ENTITY_ENDER_DRAGON_FLAP": return EsSound.createUnchecked("entity.ender_dragon.flap");
            case "ENTITY_ENDER_DRAGON_GROWL": return EsSound.createUnchecked("entity.ender_dragon.growl");
            case "ENTITY_ENDER_DRAGON_HURT": return EsSound.createUnchecked("entity.ender_dragon.hurt");
            case "ENTITY_ENDER_DRAGON_SHOOT": return EsSound.createUnchecked("entity.ender_dragon.shoot");
            case "ENTITY_ENDER_EYE_DEATH": return EsSound.createUnchecked("entity.ender_eye.death");
            case "ENTITY_ENDER_EYE_LAUNCH": return EsSound.createUnchecked("entity.ender_eye.launch");
            case "ENTITY_ENDER_PEARL_THROW": return EsSound.createUnchecked("entity.ender_pearl.throw");
            case "ENTITY_EVOKER_AMBIENT": return EsSound.createUnchecked("entity.evoker.ambient");
            case "ENTITY_EVOKER_CAST_SPELL": return EsSound.createUnchecked("entity.evoker.cast_spell");
            case "ENTITY_EVOKER_CELEBRATE": return EsSound.createUnchecked("entity.evoker.celebrate");
            case "ENTITY_EVOKER_DEATH": return EsSound.createUnchecked("entity.evoker.death");
            case "ENTITY_EVOKER_FANGS_ATTACK": return EsSound.createUnchecked("entity.evoker_fangs.attack");
            case "ENTITY_EVOKER_HURT": return EsSound.createUnchecked("entity.evoker.hurt");
            case "ENTITY_EVOKER_PREPARE_ATTACK": return EsSound.createUnchecked("entity.evoker.prepare_attack");
            case "ENTITY_EVOKER_PREPARE_SUMMON": return EsSound.createUnchecked("entity.evoker.prepare_summon");
            case "ENTITY_EVOKER_PREPARE_WOLOLO": return EsSound.createUnchecked("entity.evoker.prepare_wololo");
            case "ENTITY_EXPERIENCE_BOTTLE_THROW": return EsSound.createUnchecked("entity.experience_bottle.throw");
            case "ENTITY_EXPERIENCE_ORB_PICKUP": return EsSound.createUnchecked("entity.experience_orb.pickup");
            case "ENTITY_FIREWORK_ROCKET_BLAST": return EsSound.createUnchecked("entity.firework_rocket.blast");
            case "ENTITY_FIREWORK_ROCKET_BLAST_FAR": return EsSound.createUnchecked("entity.firework_rocket.blast_far");
            case "ENTITY_FIREWORK_ROCKET_LARGE_BLAST": return EsSound.createUnchecked("entity.firework_rocket.large_blast");
            case "ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR": return EsSound.createUnchecked("entity.firework_rocket.large_blast_far");
            case "ENTITY_FIREWORK_ROCKET_LAUNCH": return EsSound.createUnchecked("entity.firework_rocket.launch");
            case "ENTITY_FIREWORK_ROCKET_SHOOT": return EsSound.createUnchecked("entity.firework_rocket.shoot");
            case "ENTITY_FIREWORK_ROCKET_TWINKLE": return EsSound.createUnchecked("entity.firework_rocket.twinkle");
            case "ENTITY_FIREWORK_ROCKET_TWINKLE_FAR": return EsSound.createUnchecked("entity.firework_rocket.twinkle_far");
            case "ENTITY_FISHING_BOBBER_RETRIEVE": return EsSound.createUnchecked("entity.fishing_bobber.retrieve");
            case "ENTITY_FISHING_BOBBER_SPLASH": return EsSound.createUnchecked("entity.fishing_bobber.splash");
            case "ENTITY_FISHING_BOBBER_THROW": return EsSound.createUnchecked("entity.fishing_bobber.throw");
            case "ENTITY_FISH_SWIM": return EsSound.createUnchecked("entity.fish.swim");
            case "ENTITY_FOX_AGGRO": return EsSound.createUnchecked("entity.fox.aggro");
            case "ENTITY_FOX_AMBIENT": return EsSound.createUnchecked("entity.fox.ambient");
            case "ENTITY_FOX_BITE": return EsSound.createUnchecked("entity.fox.bite");
            case "ENTITY_FOX_DEATH": return EsSound.createUnchecked("entity.fox.death");
            case "ENTITY_FOX_EAT": return EsSound.createUnchecked("entity.fox.eat");
            case "ENTITY_FOX_HURT": return EsSound.createUnchecked("entity.fox.hurt");
            case "ENTITY_FOX_SCREECH": return EsSound.createUnchecked("entity.fox.screech");
            case "ENTITY_FOX_SLEEP": return EsSound.createUnchecked("entity.fox.sleep");
            case "ENTITY_FOX_SNIFF": return EsSound.createUnchecked("entity.fox.sniff");
            case "ENTITY_FOX_SPIT": return EsSound.createUnchecked("entity.fox.spit");
            case "ENTITY_FOX_TELEPORT": return EsSound.createUnchecked("entity.fox.teleport");
            case "ENTITY_GENERIC_BIG_FALL": return EsSound.createUnchecked("entity.generic.big_fall");
            case "ENTITY_GENERIC_BURN": return EsSound.createUnchecked("entity.generic.burn");
            case "ENTITY_GENERIC_DEATH": return EsSound.createUnchecked("entity.generic.death");
            case "ENTITY_GENERIC_DRINK": return EsSound.createUnchecked("entity.generic.drink");
            case "ENTITY_GENERIC_EAT": return EsSound.createUnchecked("entity.generic.eat");
            case "ENTITY_GENERIC_EXPLODE": return EsSound.createUnchecked("entity.generic.explode");
            case "ENTITY_GENERIC_EXTINGUISH_FIRE": return EsSound.createUnchecked("entity.generic.extinguish_fire");
            case "ENTITY_GENERIC_HURT": return EsSound.createUnchecked("entity.generic.hurt");
            case "ENTITY_GENERIC_SMALL_FALL": return EsSound.createUnchecked("entity.generic.small_fall");
            case "ENTITY_GENERIC_SPLASH": return EsSound.createUnchecked("entity.generic.splash");
            case "ENTITY_GENERIC_SWIM": return EsSound.createUnchecked("entity.generic.swim");
            case "ENTITY_GHAST_AMBIENT": return EsSound.createUnchecked("entity.ghast.ambient");
            case "ENTITY_GHAST_DEATH": return EsSound.createUnchecked("entity.ghast.death");
            case "ENTITY_GHAST_HURT": return EsSound.createUnchecked("entity.ghast.hurt");
            case "ENTITY_GHAST_SCREAM": return EsSound.createUnchecked("entity.ghast.scream");
            case "ENTITY_GHAST_SHOOT": return EsSound.createUnchecked("entity.ghast.shoot");
            case "ENTITY_GHAST_WARN": return EsSound.createUnchecked("entity.ghast.warn");
            case "ENTITY_GUARDIAN_AMBIENT": return EsSound.createUnchecked("entity.guardian.ambient");
            case "ENTITY_GUARDIAN_AMBIENT_LAND": return EsSound.createUnchecked("entity.guardian.ambient_land");
            case "ENTITY_GUARDIAN_ATTACK": return EsSound.createUnchecked("entity.guardian.attack");
            case "ENTITY_GUARDIAN_DEATH": return EsSound.createUnchecked("entity.guardian.death");
            case "ENTITY_GUARDIAN_DEATH_LAND": return EsSound.createUnchecked("entity.guardian.death_land");
            case "ENTITY_GUARDIAN_FLOP": return EsSound.createUnchecked("entity.guardian.flop");
            case "ENTITY_GUARDIAN_HURT": return EsSound.createUnchecked("entity.guardian.hurt");
            case "ENTITY_GUARDIAN_HURT_LAND": return EsSound.createUnchecked("entity.guardian.hurt_land");
            case "ENTITY_HOGLIN_AMBIENT": return EsSound.createUnchecked("entity.hoglin.ambient");
            case "ENTITY_HOGLIN_ANGRY": return EsSound.createUnchecked("entity.hoglin.angry");
            case "ENTITY_HOGLIN_ATTACK": return EsSound.createUnchecked("entity.hoglin.attack");
            case "ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED": return EsSound.createUnchecked("entity.hoglin.converted_to_zombified");
            case "ENTITY_HOGLIN_DEATH": return EsSound.createUnchecked("entity.hoglin.death");
            case "ENTITY_HOGLIN_HURT": return EsSound.createUnchecked("entity.hoglin.hurt");
            case "ENTITY_HOGLIN_RETREAT": return EsSound.createUnchecked("entity.hoglin.retreat");
            case "ENTITY_HOGLIN_STEP": return EsSound.createUnchecked("entity.hoglin.step");
            case "ENTITY_HORSE_AMBIENT": return EsSound.createUnchecked("entity.horse.ambient");
            case "ENTITY_HORSE_ANGRY": return EsSound.createUnchecked("entity.horse.angry");
            case "ENTITY_HORSE_ARMOR": return EsSound.createUnchecked("entity.horse.armor");
            case "ENTITY_HORSE_BREATHE": return EsSound.createUnchecked("entity.horse.breathe");
            case "ENTITY_HORSE_DEATH": return EsSound.createUnchecked("entity.horse.death");
            case "ENTITY_HORSE_EAT": return EsSound.createUnchecked("entity.horse.eat");
            case "ENTITY_HORSE_GALLOP": return EsSound.createUnchecked("entity.horse.gallop");
            case "ENTITY_HORSE_HURT": return EsSound.createUnchecked("entity.horse.hurt");
            case "ENTITY_HORSE_JUMP": return EsSound.createUnchecked("entity.horse.jump");
            case "ENTITY_HORSE_LAND": return EsSound.createUnchecked("entity.horse.land");
            case "ENTITY_HORSE_SADDLE": return EsSound.createUnchecked("entity.horse.saddle");
            case "ENTITY_HORSE_STEP": return EsSound.createUnchecked("entity.horse.step");
            case "ENTITY_HORSE_STEP_WOOD": return EsSound.createUnchecked("entity.horse.step_wood");
            case "ENTITY_HOSTILE_BIG_FALL": return EsSound.createUnchecked("entity.hostile.big_fall");
            case "ENTITY_HOSTILE_DEATH": return EsSound.createUnchecked("entity.hostile.death");
            case "ENTITY_HOSTILE_HURT": return EsSound.createUnchecked("entity.hostile.hurt");
            case "ENTITY_HOSTILE_SMALL_FALL": return EsSound.createUnchecked("entity.hostile.small_fall");
            case "ENTITY_HOSTILE_SPLASH": return EsSound.createUnchecked("entity.hostile.splash");
            case "ENTITY_HOSTILE_SWIM": return EsSound.createUnchecked("entity.hostile.swim");
            case "ENTITY_HUSK_AMBIENT": return EsSound.createUnchecked("entity.husk.ambient");
            case "ENTITY_HUSK_CONVERTED_TO_ZOMBIE": return EsSound.createUnchecked("entity.husk.converted_to_zombie");
            case "ENTITY_HUSK_DEATH": return EsSound.createUnchecked("entity.husk.death");
            case "ENTITY_HUSK_HURT": return EsSound.createUnchecked("entity.husk.hurt");
            case "ENTITY_HUSK_STEP": return EsSound.createUnchecked("entity.husk.step");
            case "ENTITY_ILLUSIONER_AMBIENT": return EsSound.createUnchecked("entity.illusioner.ambient");
            case "ENTITY_ILLUSIONER_CAST_SPELL": return EsSound.createUnchecked("entity.illusioner.cast_spell");
            case "ENTITY_ILLUSIONER_DEATH": return EsSound.createUnchecked("entity.illusioner.death");
            case "ENTITY_ILLUSIONER_HURT": return EsSound.createUnchecked("entity.illusioner.hurt");
            case "ENTITY_ILLUSIONER_MIRROR_MOVE": return EsSound.createUnchecked("entity.illusioner.mirror_move");
            case "ENTITY_ILLUSIONER_PREPARE_BLINDNESS": return EsSound.createUnchecked("entity.illusioner.prepare_blindness");
            case "ENTITY_ILLUSIONER_PREPARE_MIRROR": return EsSound.createUnchecked("entity.illusioner.prepare_mirror");
            case "ENTITY_IRON_GOLEM_ATTACK": return EsSound.createUnchecked("entity.iron_golem.attack");
            case "ENTITY_IRON_GOLEM_DAMAGE": return EsSound.createUnchecked("entity.iron_golem.damage");
            case "ENTITY_IRON_GOLEM_DEATH": return EsSound.createUnchecked("entity.iron_golem.death");
            case "ENTITY_IRON_GOLEM_HURT": return EsSound.createUnchecked("entity.iron_golem.hurt");
            case "ENTITY_IRON_GOLEM_REPAIR": return EsSound.createUnchecked("entity.iron_golem.repair");
            case "ENTITY_IRON_GOLEM_STEP": return EsSound.createUnchecked("entity.iron_golem.step");
            case "ENTITY_ITEM_BREAK": return EsSound.createUnchecked("entity.item.break");
            case "ENTITY_ITEM_FRAME_ADD_ITEM": return EsSound.createUnchecked("entity.item_frame.add_item");
            case "ENTITY_ITEM_FRAME_BREAK": return EsSound.createUnchecked("entity.item_frame.break");
            case "ENTITY_ITEM_FRAME_PLACE": return EsSound.createUnchecked("entity.item_frame.place");
            case "ENTITY_ITEM_FRAME_REMOVE_ITEM": return EsSound.createUnchecked("entity.item_frame.remove_item");
            case "ENTITY_ITEM_FRAME_ROTATE_ITEM": return EsSound.createUnchecked("entity.item_frame.rotate_item");
            case "ENTITY_ITEM_PICKUP": return EsSound.createUnchecked("entity.item.pickup");
            case "ENTITY_LEASH_KNOT_BREAK": return EsSound.createUnchecked("entity.leash_knot.break");
            case "ENTITY_LEASH_KNOT_PLACE": return EsSound.createUnchecked("entity.leash_knot.place");
            case "ENTITY_LIGHTNING_BOLT_IMPACT": return EsSound.createUnchecked("entity.lightning_bolt.impact");
            case "ENTITY_LIGHTNING_BOLT_THUNDER": return EsSound.createUnchecked("entity.lightning_bolt.thunder");
            case "ENTITY_LINGERING_POTION_THROW": return EsSound.createUnchecked("entity.lingering_potion.throw");
            case "ENTITY_LLAMA_AMBIENT": return EsSound.createUnchecked("entity.llama.ambient");
            case "ENTITY_LLAMA_ANGRY": return EsSound.createUnchecked("entity.llama.angry");
            case "ENTITY_LLAMA_CHEST": return EsSound.createUnchecked("entity.llama.chest");
            case "ENTITY_LLAMA_DEATH": return EsSound.createUnchecked("entity.llama.death");
            case "ENTITY_LLAMA_EAT": return EsSound.createUnchecked("entity.llama.eat");
            case "ENTITY_LLAMA_HURT": return EsSound.createUnchecked("entity.llama.hurt");
            case "ENTITY_LLAMA_SPIT": return EsSound.createUnchecked("entity.llama.spit");
            case "ENTITY_LLAMA_STEP": return EsSound.createUnchecked("entity.llama.step");
            case "ENTITY_LLAMA_SWAG": return EsSound.createUnchecked("entity.llama.swag");
            case "ENTITY_MAGMA_CUBE_DEATH": return EsSound.createUnchecked("entity.magma_cube.death");
            case "ENTITY_MAGMA_CUBE_DEATH_SMALL": return EsSound.createUnchecked("entity.magma_cube.death_small");
            case "ENTITY_MAGMA_CUBE_HURT": return EsSound.createUnchecked("entity.magma_cube.hurt");
            case "ENTITY_MAGMA_CUBE_HURT_SMALL": return EsSound.createUnchecked("entity.magma_cube.hurt_small");
            case "ENTITY_MAGMA_CUBE_JUMP": return EsSound.createUnchecked("entity.magma_cube.jump");
            case "ENTITY_MAGMA_CUBE_SQUISH": return EsSound.createUnchecked("entity.magma_cube.squish");
            case "ENTITY_MAGMA_CUBE_SQUISH_SMALL": return EsSound.createUnchecked("entity.magma_cube.squish_small");
            case "ENTITY_MINECART_INSIDE": return EsSound.createUnchecked("entity.minecart.inside");
            case "ENTITY_MINECART_RIDING": return EsSound.createUnchecked("entity.minecart.riding");
            case "ENTITY_MOOSHROOM_CONVERT": return EsSound.createUnchecked("entity.mooshroom.convert");
            case "ENTITY_MOOSHROOM_EAT": return EsSound.createUnchecked("entity.mooshroom.eat");
            case "ENTITY_MOOSHROOM_MILK": return EsSound.createUnchecked("entity.mooshroom.milk");
            case "ENTITY_MOOSHROOM_SHEAR": return EsSound.createUnchecked("entity.mooshroom.shear");
            case "ENTITY_MOOSHROOM_SUSPICIOUS_MILK": return EsSound.createUnchecked("entity.mooshroom.suspicious_milk");
            case "ENTITY_MULE_AMBIENT": return EsSound.createUnchecked("entity.mule.ambient");
            case "ENTITY_MULE_ANGRY": return EsSound.createUnchecked("entity.mule.angry");
            case "ENTITY_MULE_CHEST": return EsSound.createUnchecked("entity.mule.chest");
            case "ENTITY_MULE_DEATH": return EsSound.createUnchecked("entity.mule.death");
            case "ENTITY_MULE_EAT": return EsSound.createUnchecked("entity.mule.eat");
            case "ENTITY_MULE_HURT": return EsSound.createUnchecked("entity.mule.hurt");
            case "ENTITY_OCELOT_AMBIENT": return EsSound.createUnchecked("entity.ocelot.ambient");
            case "ENTITY_OCELOT_DEATH": return EsSound.createUnchecked("entity.ocelot.death");
            case "ENTITY_OCELOT_HURT": return EsSound.createUnchecked("entity.ocelot.hurt");
            case "ENTITY_PAINTING_BREAK": return EsSound.createUnchecked("entity.painting.break");
            case "ENTITY_PAINTING_PLACE": return EsSound.createUnchecked("entity.painting.place");
            case "ENTITY_PANDA_AGGRESSIVE_AMBIENT": return EsSound.createUnchecked("entity.panda.aggressive_ambient");
            case "ENTITY_PANDA_AMBIENT": return EsSound.createUnchecked("entity.panda.ambient");
            case "ENTITY_PANDA_BITE": return EsSound.createUnchecked("entity.panda.bite");
            case "ENTITY_PANDA_CANT_BREED": return EsSound.createUnchecked("entity.panda.cant_breed");
            case "ENTITY_PANDA_DEATH": return EsSound.createUnchecked("entity.panda.death");
            case "ENTITY_PANDA_EAT": return EsSound.createUnchecked("entity.panda.eat");
            case "ENTITY_PANDA_HURT": return EsSound.createUnchecked("entity.panda.hurt");
            case "ENTITY_PANDA_PRE_SNEEZE": return EsSound.createUnchecked("entity.panda.pre_sneeze");
            case "ENTITY_PANDA_SNEEZE": return EsSound.createUnchecked("entity.panda.sneeze");
            case "ENTITY_PANDA_STEP": return EsSound.createUnchecked("entity.panda.step");
            case "ENTITY_PANDA_WORRIED_AMBIENT": return EsSound.createUnchecked("entity.panda.worried_ambient");
            case "ENTITY_PARROT_AMBIENT": return EsSound.createUnchecked("entity.parrot.ambient");
            case "ENTITY_PARROT_DEATH": return EsSound.createUnchecked("entity.parrot.death");
            case "ENTITY_PARROT_EAT": return EsSound.createUnchecked("entity.parrot.eat");
            case "ENTITY_PARROT_FLY": return EsSound.createUnchecked("entity.parrot.fly");
            case "ENTITY_PARROT_HURT": return EsSound.createUnchecked("entity.parrot.hurt");
            case "ENTITY_PARROT_IMITATE_BLAZE": return EsSound.createUnchecked("entity.parrot.imitate.blaze");
            case "ENTITY_PARROT_IMITATE_CREEPER": return EsSound.createUnchecked("entity.parrot.imitate.creeper");
            case "ENTITY_PARROT_IMITATE_DROWNED": return EsSound.createUnchecked("entity.parrot.imitate.drowned");
            case "ENTITY_PARROT_IMITATE_ELDER_GUARDIAN": return EsSound.createUnchecked("entity.parrot.imitate.elder_guardian");
            case "ENTITY_PARROT_IMITATE_ENDERMITE": return EsSound.createUnchecked("entity.parrot.imitate.endermite");
            case "ENTITY_PARROT_IMITATE_ENDER_DRAGON": return EsSound.createUnchecked("entity.parrot.imitate.ender_dragon");
            case "ENTITY_PARROT_IMITATE_EVOKER": return EsSound.createUnchecked("entity.parrot.imitate.evoker");
            case "ENTITY_PARROT_IMITATE_GHAST": return EsSound.createUnchecked("entity.parrot.imitate.ghast");
            case "ENTITY_PARROT_IMITATE_GUARDIAN": return EsSound.createUnchecked("entity.parrot.imitate.guardian");
            case "ENTITY_PARROT_IMITATE_HOGLIN": return EsSound.createUnchecked("entity.parrot.imitate.hoglin");
            case "ENTITY_PARROT_IMITATE_HUSK": return EsSound.createUnchecked("entity.parrot.imitate.husk");
            case "ENTITY_PARROT_IMITATE_ILLUSIONER": return EsSound.createUnchecked("entity.parrot.imitate.illusioner");
            case "ENTITY_PARROT_IMITATE_MAGMA_CUBE": return EsSound.createUnchecked("entity.parrot.imitate.magma_cube");
            case "ENTITY_PARROT_IMITATE_PHANTOM": return EsSound.createUnchecked("entity.parrot.imitate.phantom");
            case "ENTITY_PARROT_IMITATE_PIGLIN": return EsSound.createUnchecked("entity.parrot.imitate.piglin");
            case "ENTITY_PARROT_IMITATE_PIGLIN_BRUTE": return EsSound.createUnchecked("entity.parrot.imitate.piglin_brute");
            case "ENTITY_PARROT_IMITATE_PILLAGER": return EsSound.createUnchecked("entity.parrot.imitate.pillager");
            case "ENTITY_PARROT_IMITATE_RAVAGER": return EsSound.createUnchecked("entity.parrot.imitate.ravager");
            case "ENTITY_PARROT_IMITATE_SHULKER": return EsSound.createUnchecked("entity.parrot.imitate.shulker");
            case "ENTITY_PARROT_IMITATE_SILVERFISH": return EsSound.createUnchecked("entity.parrot.imitate.silverfish");
            case "ENTITY_PARROT_IMITATE_SKELETON": return EsSound.createUnchecked("entity.parrot.imitate.skeleton");
            case "ENTITY_PARROT_IMITATE_SLIME": return EsSound.createUnchecked("entity.parrot.imitate.slime");
            case "ENTITY_PARROT_IMITATE_SPIDER": return EsSound.createUnchecked("entity.parrot.imitate.spider");
            case "ENTITY_PARROT_IMITATE_STRAY": return EsSound.createUnchecked("entity.parrot.imitate.stray");
            case "ENTITY_PARROT_IMITATE_VEX": return EsSound.createUnchecked("entity.parrot.imitate.vex");
            case "ENTITY_PARROT_IMITATE_VINDICATOR": return EsSound.createUnchecked("entity.parrot.imitate.vindicator");
            case "ENTITY_PARROT_IMITATE_WITCH": return EsSound.createUnchecked("entity.parrot.imitate.witch");
            case "ENTITY_PARROT_IMITATE_WITHER": return EsSound.createUnchecked("entity.parrot.imitate.wither");
            case "ENTITY_PARROT_IMITATE_WITHER_SKELETON": return EsSound.createUnchecked("entity.parrot.imitate.wither_skeleton");
            case "ENTITY_PARROT_IMITATE_ZOGLIN": return EsSound.createUnchecked("entity.parrot.imitate.zoglin");
            case "ENTITY_PARROT_IMITATE_ZOMBIE": return EsSound.createUnchecked("entity.parrot.imitate.zombie");
            case "ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER": return EsSound.createUnchecked("entity.parrot.imitate.zombie_villager");
            case "ENTITY_PARROT_STEP": return EsSound.createUnchecked("entity.parrot.step");
            case "ENTITY_PHANTOM_AMBIENT": return EsSound.createUnchecked("entity.phantom.ambient");
            case "ENTITY_PHANTOM_BITE": return EsSound.createUnchecked("entity.phantom.bite");
            case "ENTITY_PHANTOM_DEATH": return EsSound.createUnchecked("entity.phantom.death");
            case "ENTITY_PHANTOM_FLAP": return EsSound.createUnchecked("entity.phantom.flap");
            case "ENTITY_PHANTOM_HURT": return EsSound.createUnchecked("entity.phantom.hurt");
            case "ENTITY_PHANTOM_SWOOP": return EsSound.createUnchecked("entity.phantom.swoop");
            case "ENTITY_PIGLIN_ADMIRING_ITEM": return EsSound.createUnchecked("entity.piglin.admiring_item");
            case "ENTITY_PIGLIN_AMBIENT": return EsSound.createUnchecked("entity.piglin.ambient");
            case "ENTITY_PIGLIN_ANGRY": return EsSound.createUnchecked("entity.piglin.angry");
            case "ENTITY_PIGLIN_BRUTE_AMBIENT": return EsSound.createUnchecked("entity.piglin_brute.ambient");
            case "ENTITY_PIGLIN_BRUTE_ANGRY": return EsSound.createUnchecked("entity.piglin_brute.angry");
            case "ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED": return EsSound.createUnchecked("entity.piglin_brute.converted_to_zombified");
            case "ENTITY_PIGLIN_BRUTE_DEATH": return EsSound.createUnchecked("entity.piglin_brute.death");
            case "ENTITY_PIGLIN_BRUTE_HURT": return EsSound.createUnchecked("entity.piglin_brute.hurt");
            case "ENTITY_PIGLIN_BRUTE_STEP": return EsSound.createUnchecked("entity.piglin_brute.step");
            case "ENTITY_PIGLIN_CELEBRATE": return EsSound.createUnchecked("entity.piglin.celebrate");
            case "ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED": return EsSound.createUnchecked("entity.piglin.converted_to_zombified");
            case "ENTITY_PIGLIN_DEATH": return EsSound.createUnchecked("entity.piglin.death");
            case "ENTITY_PIGLIN_HURT": return EsSound.createUnchecked("entity.piglin.hurt");
            case "ENTITY_PIGLIN_JEALOUS": return EsSound.createUnchecked("entity.piglin.jealous");
            case "ENTITY_PIGLIN_RETREAT": return EsSound.createUnchecked("entity.piglin.retreat");
            case "ENTITY_PIGLIN_STEP": return EsSound.createUnchecked("entity.piglin.step");
            case "ENTITY_PIG_AMBIENT": return EsSound.createUnchecked("entity.pig.ambient");
            case "ENTITY_PIG_DEATH": return EsSound.createUnchecked("entity.pig.death");
            case "ENTITY_PIG_HURT": return EsSound.createUnchecked("entity.pig.hurt");
            case "ENTITY_PIG_SADDLE": return EsSound.createUnchecked("entity.pig.saddle");
            case "ENTITY_PIG_STEP": return EsSound.createUnchecked("entity.pig.step");
            case "ENTITY_PILLAGER_AMBIENT": return EsSound.createUnchecked("entity.pillager.ambient");
            case "ENTITY_PILLAGER_CELEBRATE": return EsSound.createUnchecked("entity.pillager.celebrate");
            case "ENTITY_PILLAGER_DEATH": return EsSound.createUnchecked("entity.pillager.death");
            case "ENTITY_PILLAGER_HURT": return EsSound.createUnchecked("entity.pillager.hurt");
            case "ENTITY_PLAYER_ATTACK_CRIT": return EsSound.createUnchecked("entity.player.attack.crit");
            case "ENTITY_PLAYER_ATTACK_KNOCKBACK": return EsSound.createUnchecked("entity.player.attack.knockback");
            case "ENTITY_PLAYER_ATTACK_NODAMAGE": return EsSound.createUnchecked("entity.player.attack.nodamage");
            case "ENTITY_PLAYER_ATTACK_STRONG": return EsSound.createUnchecked("entity.player.attack.strong");
            case "ENTITY_PLAYER_ATTACK_SWEEP": return EsSound.createUnchecked("entity.player.attack.sweep");
            case "ENTITY_PLAYER_ATTACK_WEAK": return EsSound.createUnchecked("entity.player.attack.weak");
            case "ENTITY_PLAYER_BIG_FALL": return EsSound.createUnchecked("entity.player.big_fall");
            case "ENTITY_PLAYER_BREATH": return EsSound.createUnchecked("entity.player.breath");
            case "ENTITY_PLAYER_BURP": return EsSound.createUnchecked("entity.player.burp");
            case "ENTITY_PLAYER_DEATH": return EsSound.createUnchecked("entity.player.death");
            case "ENTITY_PLAYER_HURT": return EsSound.createUnchecked("entity.player.hurt");
            case "ENTITY_PLAYER_HURT_DROWN": return EsSound.createUnchecked("entity.player.hurt_drown");
            case "ENTITY_PLAYER_HURT_ON_FIRE": return EsSound.createUnchecked("entity.player.hurt_on_fire");
            case "ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH": return EsSound.createUnchecked("entity.player.hurt_sweet_berry_bush");
            case "ENTITY_PLAYER_LEVELUP": return EsSound.createUnchecked("entity.player.levelup");
            case "ENTITY_PLAYER_SMALL_FALL": return EsSound.createUnchecked("entity.player.small_fall");
            case "ENTITY_PLAYER_SPLASH": return EsSound.createUnchecked("entity.player.splash");
            case "ENTITY_PLAYER_SPLASH_HIGH_SPEED": return EsSound.createUnchecked("entity.player.splash.high_speed");
            case "ENTITY_PLAYER_SWIM": return EsSound.createUnchecked("entity.player.swim");
            case "ENTITY_POLAR_BEAR_AMBIENT": return EsSound.createUnchecked("entity.polar_bear.ambient");
            case "ENTITY_POLAR_BEAR_AMBIENT_BABY": return EsSound.createUnchecked("entity.polar_bear.ambient_baby");
            case "ENTITY_POLAR_BEAR_DEATH": return EsSound.createUnchecked("entity.polar_bear.death");
            case "ENTITY_POLAR_BEAR_HURT": return EsSound.createUnchecked("entity.polar_bear.hurt");
            case "ENTITY_POLAR_BEAR_STEP": return EsSound.createUnchecked("entity.polar_bear.step");
            case "ENTITY_POLAR_BEAR_WARNING": return EsSound.createUnchecked("entity.polar_bear.warning");
            case "ENTITY_PUFFER_FISH_AMBIENT": return EsSound.createUnchecked("entity.puffer_fish.ambient");
            case "ENTITY_PUFFER_FISH_BLOW_OUT": return EsSound.createUnchecked("entity.puffer_fish.blow_out");
            case "ENTITY_PUFFER_FISH_BLOW_UP": return EsSound.createUnchecked("entity.puffer_fish.blow_up");
            case "ENTITY_PUFFER_FISH_DEATH": return EsSound.createUnchecked("entity.puffer_fish.death");
            case "ENTITY_PUFFER_FISH_FLOP": return EsSound.createUnchecked("entity.puffer_fish.flop");
            case "ENTITY_PUFFER_FISH_HURT": return EsSound.createUnchecked("entity.puffer_fish.hurt");
            case "ENTITY_PUFFER_FISH_STING": return EsSound.createUnchecked("entity.puffer_fish.sting");
            case "ENTITY_RABBIT_AMBIENT": return EsSound.createUnchecked("entity.rabbit.ambient");
            case "ENTITY_RABBIT_ATTACK": return EsSound.createUnchecked("entity.rabbit.attack");
            case "ENTITY_RABBIT_DEATH": return EsSound.createUnchecked("entity.rabbit.death");
            case "ENTITY_RABBIT_HURT": return EsSound.createUnchecked("entity.rabbit.hurt");
            case "ENTITY_RABBIT_JUMP": return EsSound.createUnchecked("entity.rabbit.jump");
            case "ENTITY_RAVAGER_AMBIENT": return EsSound.createUnchecked("entity.ravager.ambient");
            case "ENTITY_RAVAGER_ATTACK": return EsSound.createUnchecked("entity.ravager.attack");
            case "ENTITY_RAVAGER_CELEBRATE": return EsSound.createUnchecked("entity.ravager.celebrate");
            case "ENTITY_RAVAGER_DEATH": return EsSound.createUnchecked("entity.ravager.death");
            case "ENTITY_RAVAGER_HURT": return EsSound.createUnchecked("entity.ravager.hurt");
            case "ENTITY_RAVAGER_ROAR": return EsSound.createUnchecked("entity.ravager.roar");
            case "ENTITY_RAVAGER_STEP": return EsSound.createUnchecked("entity.ravager.step");
            case "ENTITY_RAVAGER_STUNNED": return EsSound.createUnchecked("entity.ravager.stunned");
            case "ENTITY_SALMON_AMBIENT": return EsSound.createUnchecked("entity.salmon.ambient");
            case "ENTITY_SALMON_DEATH": return EsSound.createUnchecked("entity.salmon.death");
            case "ENTITY_SALMON_FLOP": return EsSound.createUnchecked("entity.salmon.flop");
            case "ENTITY_SALMON_HURT": return EsSound.createUnchecked("entity.salmon.hurt");
            case "ENTITY_SHEEP_AMBIENT": return EsSound.createUnchecked("entity.sheep.ambient");
            case "ENTITY_SHEEP_DEATH": return EsSound.createUnchecked("entity.sheep.death");
            case "ENTITY_SHEEP_HURT": return EsSound.createUnchecked("entity.sheep.hurt");
            case "ENTITY_SHEEP_SHEAR": return EsSound.createUnchecked("entity.sheep.shear");
            case "ENTITY_SHEEP_STEP": return EsSound.createUnchecked("entity.sheep.step");
            case "ENTITY_SHULKER_AMBIENT": return EsSound.createUnchecked("entity.shulker.ambient");
            case "ENTITY_SHULKER_BULLET_HIT": return EsSound.createUnchecked("entity.shulker_bullet.hit");
            case "ENTITY_SHULKER_BULLET_HURT": return EsSound.createUnchecked("entity.shulker_bullet.hurt");
            case "ENTITY_SHULKER_CLOSE": return EsSound.createUnchecked("entity.shulker.close");
            case "ENTITY_SHULKER_DEATH": return EsSound.createUnchecked("entity.shulker.death");
            case "ENTITY_SHULKER_HURT": return EsSound.createUnchecked("entity.shulker.hurt");
            case "ENTITY_SHULKER_HURT_CLOSED": return EsSound.createUnchecked("entity.shulker.hurt_closed");
            case "ENTITY_SHULKER_OPEN": return EsSound.createUnchecked("entity.shulker.open");
            case "ENTITY_SHULKER_SHOOT": return EsSound.createUnchecked("entity.shulker.shoot");
            case "ENTITY_SHULKER_TELEPORT": return EsSound.createUnchecked("entity.shulker.teleport");
            case "ENTITY_SILVERFISH_AMBIENT": return EsSound.createUnchecked("entity.silverfish.ambient");
            case "ENTITY_SILVERFISH_DEATH": return EsSound.createUnchecked("entity.silverfish.death");
            case "ENTITY_SILVERFISH_HURT": return EsSound.createUnchecked("entity.silverfish.hurt");
            case "ENTITY_SILVERFISH_STEP": return EsSound.createUnchecked("entity.silverfish.step");
            case "ENTITY_SKELETON_AMBIENT": return EsSound.createUnchecked("entity.skeleton.ambient");
            case "ENTITY_SKELETON_DEATH": return EsSound.createUnchecked("entity.skeleton.death");
            case "ENTITY_SKELETON_HORSE_AMBIENT": return EsSound.createUnchecked("entity.skeleton_horse.ambient");
            case "ENTITY_SKELETON_HORSE_AMBIENT_WATER": return EsSound.createUnchecked("entity.skeleton_horse.ambient_water");
            case "ENTITY_SKELETON_HORSE_DEATH": return EsSound.createUnchecked("entity.skeleton_horse.death");
            case "ENTITY_SKELETON_HORSE_GALLOP_WATER": return EsSound.createUnchecked("entity.skeleton_horse.gallop_water");
            case "ENTITY_SKELETON_HORSE_HURT": return EsSound.createUnchecked("entity.skeleton_horse.hurt");
            case "ENTITY_SKELETON_HORSE_JUMP_WATER": return EsSound.createUnchecked("entity.skeleton_horse.jump_water");
            case "ENTITY_SKELETON_HORSE_STEP_WATER": return EsSound.createUnchecked("entity.skeleton_horse.step_water");
            case "ENTITY_SKELETON_HORSE_SWIM": return EsSound.createUnchecked("entity.skeleton_horse.swim");
            case "ENTITY_SKELETON_HURT": return EsSound.createUnchecked("entity.skeleton.hurt");
            case "ENTITY_SKELETON_SHOOT": return EsSound.createUnchecked("entity.skeleton.shoot");
            case "ENTITY_SKELETON_STEP": return EsSound.createUnchecked("entity.skeleton.step");
            case "ENTITY_SLIME_ATTACK": return EsSound.createUnchecked("entity.slime.attack");
            case "ENTITY_SLIME_DEATH": return EsSound.createUnchecked("entity.slime.death");
            case "ENTITY_SLIME_DEATH_SMALL": return EsSound.createUnchecked("entity.slime.death_small");
            case "ENTITY_SLIME_HURT": return EsSound.createUnchecked("entity.slime.hurt");
            case "ENTITY_SLIME_HURT_SMALL": return EsSound.createUnchecked("entity.slime.hurt_small");
            case "ENTITY_SLIME_JUMP": return EsSound.createUnchecked("entity.slime.jump");
            case "ENTITY_SLIME_JUMP_SMALL": return EsSound.createUnchecked("entity.slime.jump_small");
            case "ENTITY_SLIME_SQUISH": return EsSound.createUnchecked("entity.slime.squish");
            case "ENTITY_SLIME_SQUISH_SMALL": return EsSound.createUnchecked("entity.slime.squish_small");
            case "ENTITY_SNOWBALL_THROW": return EsSound.createUnchecked("entity.snowball.throw");
            case "ENTITY_SNOW_GOLEM_AMBIENT": return EsSound.createUnchecked("entity.snow_golem.ambient");
            case "ENTITY_SNOW_GOLEM_DEATH": return EsSound.createUnchecked("entity.snow_golem.death");
            case "ENTITY_SNOW_GOLEM_HURT": return EsSound.createUnchecked("entity.snow_golem.hurt");
            case "ENTITY_SNOW_GOLEM_SHEAR": return EsSound.createUnchecked("entity.snow_golem.shear");
            case "ENTITY_SNOW_GOLEM_SHOOT": return EsSound.createUnchecked("entity.snow_golem.shoot");
            case "ENTITY_SPIDER_AMBIENT": return EsSound.createUnchecked("entity.spider.ambient");
            case "ENTITY_SPIDER_DEATH": return EsSound.createUnchecked("entity.spider.death");
            case "ENTITY_SPIDER_HURT": return EsSound.createUnchecked("entity.spider.hurt");
            case "ENTITY_SPIDER_STEP": return EsSound.createUnchecked("entity.spider.step");
            case "ENTITY_SPLASH_POTION_BREAK": return EsSound.createUnchecked("entity.splash_potion.break");
            case "ENTITY_SPLASH_POTION_THROW": return EsSound.createUnchecked("entity.splash_potion.throw");
            case "ENTITY_SQUID_AMBIENT": return EsSound.createUnchecked("entity.squid.ambient");
            case "ENTITY_SQUID_DEATH": return EsSound.createUnchecked("entity.squid.death");
            case "ENTITY_SQUID_HURT": return EsSound.createUnchecked("entity.squid.hurt");
            case "ENTITY_SQUID_SQUIRT": return EsSound.createUnchecked("entity.squid.squirt");
            case "ENTITY_STRAY_AMBIENT": return EsSound.createUnchecked("entity.stray.ambient");
            case "ENTITY_STRAY_DEATH": return EsSound.createUnchecked("entity.stray.death");
            case "ENTITY_STRAY_HURT": return EsSound.createUnchecked("entity.stray.hurt");
            case "ENTITY_STRAY_STEP": return EsSound.createUnchecked("entity.stray.step");
            case "ENTITY_STRIDER_AMBIENT": return EsSound.createUnchecked("entity.strider.ambient");
            case "ENTITY_STRIDER_DEATH": return EsSound.createUnchecked("entity.strider.death");
            case "ENTITY_STRIDER_EAT": return EsSound.createUnchecked("entity.strider.eat");
            case "ENTITY_STRIDER_HAPPY": return EsSound.createUnchecked("entity.strider.happy");
            case "ENTITY_STRIDER_HURT": return EsSound.createUnchecked("entity.strider.hurt");
            case "ENTITY_STRIDER_RETREAT": return EsSound.createUnchecked("entity.strider.retreat");
            case "ENTITY_STRIDER_SADDLE": return EsSound.createUnchecked("entity.strider.saddle");
            case "ENTITY_STRIDER_STEP": return EsSound.createUnchecked("entity.strider.step");
            case "ENTITY_STRIDER_STEP_LAVA": return EsSound.createUnchecked("entity.strider.step_lava");
            case "ENTITY_TNT_PRIMED": return EsSound.createUnchecked("entity.tnt.primed");
            case "ENTITY_TROPICAL_FISH_AMBIENT": return EsSound.createUnchecked("entity.tropical_fish.ambient");
            case "ENTITY_TROPICAL_FISH_DEATH": return EsSound.createUnchecked("entity.tropical_fish.death");
            case "ENTITY_TROPICAL_FISH_FLOP": return EsSound.createUnchecked("entity.tropical_fish.flop");
            case "ENTITY_TROPICAL_FISH_HURT": return EsSound.createUnchecked("entity.tropical_fish.hurt");
            case "ENTITY_TURTLE_AMBIENT_LAND": return EsSound.createUnchecked("entity.turtle.ambient_land");
            case "ENTITY_TURTLE_DEATH": return EsSound.createUnchecked("entity.turtle.death");
            case "ENTITY_TURTLE_DEATH_BABY": return EsSound.createUnchecked("entity.turtle.death_baby");
            case "ENTITY_TURTLE_EGG_BREAK": return EsSound.createUnchecked("entity.turtle.egg_break");
            case "ENTITY_TURTLE_EGG_CRACK": return EsSound.createUnchecked("entity.turtle.egg_crack");
            case "ENTITY_TURTLE_EGG_HATCH": return EsSound.createUnchecked("entity.turtle.egg_hatch");
            case "ENTITY_TURTLE_HURT": return EsSound.createUnchecked("entity.turtle.hurt");
            case "ENTITY_TURTLE_HURT_BABY": return EsSound.createUnchecked("entity.turtle.hurt_baby");
            case "ENTITY_TURTLE_LAY_EGG": return EsSound.createUnchecked("entity.turtle.lay_egg");
            case "ENTITY_TURTLE_SHAMBLE": return EsSound.createUnchecked("entity.turtle.shamble");
            case "ENTITY_TURTLE_SHAMBLE_BABY": return EsSound.createUnchecked("entity.turtle.shamble_baby");
            case "ENTITY_TURTLE_SWIM": return EsSound.createUnchecked("entity.turtle.swim");
            case "ENTITY_VEX_AMBIENT": return EsSound.createUnchecked("entity.vex.ambient");
            case "ENTITY_VEX_CHARGE": return EsSound.createUnchecked("entity.vex.charge");
            case "ENTITY_VEX_DEATH": return EsSound.createUnchecked("entity.vex.death");
            case "ENTITY_VEX_HURT": return EsSound.createUnchecked("entity.vex.hurt");
            case "ENTITY_VILLAGER_AMBIENT": return EsSound.createUnchecked("entity.villager.ambient");
            case "ENTITY_VILLAGER_CELEBRATE": return EsSound.createUnchecked("entity.villager.celebrate");
            case "ENTITY_VILLAGER_DEATH": return EsSound.createUnchecked("entity.villager.death");
            case "ENTITY_VILLAGER_HURT": return EsSound.createUnchecked("entity.villager.hurt");
            case "ENTITY_VILLAGER_NO": return EsSound.createUnchecked("entity.villager.no");
            case "ENTITY_VILLAGER_TRADE": return EsSound.createUnchecked("entity.villager.trade");
            case "ENTITY_VILLAGER_WORK_ARMORER": return EsSound.createUnchecked("entity.villager.work_armorer");
            case "ENTITY_VILLAGER_WORK_BUTCHER": return EsSound.createUnchecked("entity.villager.work_butcher");
            case "ENTITY_VILLAGER_WORK_CARTOGRAPHER": return EsSound.createUnchecked("entity.villager.work_cartographer");
            case "ENTITY_VILLAGER_WORK_CLERIC": return EsSound.createUnchecked("entity.villager.work_cleric");
            case "ENTITY_VILLAGER_WORK_FARMER": return EsSound.createUnchecked("entity.villager.work_farmer");
            case "ENTITY_VILLAGER_WORK_FISHERMAN": return EsSound.createUnchecked("entity.villager.work_fisherman");
            case "ENTITY_VILLAGER_WORK_FLETCHER": return EsSound.createUnchecked("entity.villager.work_fletcher");
            case "ENTITY_VILLAGER_WORK_LEATHERWORKER": return EsSound.createUnchecked("entity.villager.work_leatherworker");
            case "ENTITY_VILLAGER_WORK_LIBRARIAN": return EsSound.createUnchecked("entity.villager.work_librarian");
            case "ENTITY_VILLAGER_WORK_MASON": return EsSound.createUnchecked("entity.villager.work_mason");
            case "ENTITY_VILLAGER_WORK_SHEPHERD": return EsSound.createUnchecked("entity.villager.work_shepherd");
            case "ENTITY_VILLAGER_WORK_TOOLSMITH": return EsSound.createUnchecked("entity.villager.work_toolsmith");
            case "ENTITY_VILLAGER_WORK_WEAPONSMITH": return EsSound.createUnchecked("entity.villager.work_weaponsmith");
            case "ENTITY_VILLAGER_YES": return EsSound.createUnchecked("entity.villager.yes");
            case "ENTITY_VINDICATOR_AMBIENT": return EsSound.createUnchecked("entity.vindicator.ambient");
            case "ENTITY_VINDICATOR_CELEBRATE": return EsSound.createUnchecked("entity.vindicator.celebrate");
            case "ENTITY_VINDICATOR_DEATH": return EsSound.createUnchecked("entity.vindicator.death");
            case "ENTITY_VINDICATOR_HURT": return EsSound.createUnchecked("entity.vindicator.hurt");
            case "ENTITY_WANDERING_TRADER_AMBIENT": return EsSound.createUnchecked("entity.wandering_trader.ambient");
            case "ENTITY_WANDERING_TRADER_DEATH": return EsSound.createUnchecked("entity.wandering_trader.death");
            case "ENTITY_WANDERING_TRADER_DISAPPEARED": return EsSound.createUnchecked("entity.wandering_trader.disappeared");
            case "ENTITY_WANDERING_TRADER_DRINK_MILK": return EsSound.createUnchecked("entity.wandering_trader.drink_milk");
            case "ENTITY_WANDERING_TRADER_DRINK_POTION": return EsSound.createUnchecked("entity.wandering_trader.drink_potion");
            case "ENTITY_WANDERING_TRADER_HURT": return EsSound.createUnchecked("entity.wandering_trader.hurt");
            case "ENTITY_WANDERING_TRADER_NO": return EsSound.createUnchecked("entity.wandering_trader.no");
            case "ENTITY_WANDERING_TRADER_REAPPEARED": return EsSound.createUnchecked("entity.wandering_trader.reappeared");
            case "ENTITY_WANDERING_TRADER_TRADE": return EsSound.createUnchecked("entity.wandering_trader.trade");
            case "ENTITY_WANDERING_TRADER_YES": return EsSound.createUnchecked("entity.wandering_trader.yes");
            case "ENTITY_WITCH_AMBIENT": return EsSound.createUnchecked("entity.witch.ambient");
            case "ENTITY_WITCH_CELEBRATE": return EsSound.createUnchecked("entity.witch.celebrate");
            case "ENTITY_WITCH_DEATH": return EsSound.createUnchecked("entity.witch.death");
            case "ENTITY_WITCH_DRINK": return EsSound.createUnchecked("entity.witch.drink");
            case "ENTITY_WITCH_HURT": return EsSound.createUnchecked("entity.witch.hurt");
            case "ENTITY_WITCH_THROW": return EsSound.createUnchecked("entity.witch.throw");
            case "ENTITY_WITHER_AMBIENT": return EsSound.createUnchecked("entity.wither.ambient");
            case "ENTITY_WITHER_BREAK_BLOCK": return EsSound.createUnchecked("entity.wither.break_block");
            case "ENTITY_WITHER_DEATH": return EsSound.createUnchecked("entity.wither.death");
            case "ENTITY_WITHER_HURT": return EsSound.createUnchecked("entity.wither.hurt");
            case "ENTITY_WITHER_SHOOT": return EsSound.createUnchecked("entity.wither.shoot");
            case "ENTITY_WITHER_SKELETON_AMBIENT": return EsSound.createUnchecked("entity.wither_skeleton.ambient");
            case "ENTITY_WITHER_SKELETON_DEATH": return EsSound.createUnchecked("entity.wither_skeleton.death");
            case "ENTITY_WITHER_SKELETON_HURT": return EsSound.createUnchecked("entity.wither_skeleton.hurt");
            case "ENTITY_WITHER_SKELETON_STEP": return EsSound.createUnchecked("entity.wither_skeleton.step");
            case "ENTITY_WITHER_SPAWN": return EsSound.createUnchecked("entity.wither.spawn");
            case "ENTITY_WOLF_AMBIENT": return EsSound.createUnchecked("entity.wolf.ambient");
            case "ENTITY_WOLF_DEATH": return EsSound.createUnchecked("entity.wolf.death");
            case "ENTITY_WOLF_GROWL": return EsSound.createUnchecked("entity.wolf.growl");
            case "ENTITY_WOLF_HOWL": return EsSound.createUnchecked("entity.wolf.howl");
            case "ENTITY_WOLF_HURT": return EsSound.createUnchecked("entity.wolf.hurt");
            case "ENTITY_WOLF_PANT": return EsSound.createUnchecked("entity.wolf.pant");
            case "ENTITY_WOLF_SHAKE": return EsSound.createUnchecked("entity.wolf.shake");
            case "ENTITY_WOLF_STEP": return EsSound.createUnchecked("entity.wolf.step");
            case "ENTITY_WOLF_WHINE": return EsSound.createUnchecked("entity.wolf.whine");
            case "ENTITY_ZOGLIN_AMBIENT": return EsSound.createUnchecked("entity.zoglin.ambient");
            case "ENTITY_ZOGLIN_ANGRY": return EsSound.createUnchecked("entity.zoglin.angry");
            case "ENTITY_ZOGLIN_ATTACK": return EsSound.createUnchecked("entity.zoglin.attack");
            case "ENTITY_ZOGLIN_DEATH": return EsSound.createUnchecked("entity.zoglin.death");
            case "ENTITY_ZOGLIN_HURT": return EsSound.createUnchecked("entity.zoglin.hurt");
            case "ENTITY_ZOGLIN_STEP": return EsSound.createUnchecked("entity.zoglin.step");
            case "ENTITY_ZOMBIE_AMBIENT": return EsSound.createUnchecked("entity.zombie.ambient");
            case "ENTITY_ZOMBIE_ATTACK_IRON_DOOR": return EsSound.createUnchecked("entity.zombie.attack_iron_door");
            case "ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR": return EsSound.createUnchecked("entity.zombie.attack_wooden_door");
            case "ENTITY_ZOMBIE_BREAK_WOODEN_DOOR": return EsSound.createUnchecked("entity.zombie.break_wooden_door");
            case "ENTITY_ZOMBIE_CONVERTED_TO_DROWNED": return EsSound.createUnchecked("entity.zombie.converted_to_drowned");
            case "ENTITY_ZOMBIE_DEATH": return EsSound.createUnchecked("entity.zombie.death");
            case "ENTITY_ZOMBIE_DESTROY_EGG": return EsSound.createUnchecked("entity.zombie.destroy_egg");
            case "ENTITY_ZOMBIE_HORSE_AMBIENT": return EsSound.createUnchecked("entity.zombie_horse.ambient");
            case "ENTITY_ZOMBIE_HORSE_DEATH": return EsSound.createUnchecked("entity.zombie_horse.death");
            case "ENTITY_ZOMBIE_HORSE_HURT": return EsSound.createUnchecked("entity.zombie_horse.hurt");
            case "ENTITY_ZOMBIE_HURT": return EsSound.createUnchecked("entity.zombie.hurt");
            case "ENTITY_ZOMBIE_INFECT": return EsSound.createUnchecked("entity.zombie.infect");
            case "ENTITY_ZOMBIE_STEP": return EsSound.createUnchecked("entity.zombie.step");
            case "ENTITY_ZOMBIE_VILLAGER_AMBIENT": return EsSound.createUnchecked("entity.zombie_villager.ambient");
            case "ENTITY_ZOMBIE_VILLAGER_CONVERTED": return EsSound.createUnchecked("entity.zombie_villager.converted");
            case "ENTITY_ZOMBIE_VILLAGER_CURE": return EsSound.createUnchecked("entity.zombie_villager.cure");
            case "ENTITY_ZOMBIE_VILLAGER_DEATH": return EsSound.createUnchecked("entity.zombie_villager.death");
            case "ENTITY_ZOMBIE_VILLAGER_HURT": return EsSound.createUnchecked("entity.zombie_villager.hurt");
            case "ENTITY_ZOMBIE_VILLAGER_STEP": return EsSound.createUnchecked("entity.zombie_villager.step");
            case "ENTITY_ZOMBIFIED_PIGLIN_AMBIENT": return EsSound.createUnchecked("entity.zombified_piglin.ambient");
            case "ENTITY_ZOMBIFIED_PIGLIN_ANGRY": return EsSound.createUnchecked("entity.zombified_piglin.angry");
            case "ENTITY_ZOMBIFIED_PIGLIN_DEATH": return EsSound.createUnchecked("entity.zombified_piglin.death");
            case "ENTITY_ZOMBIFIED_PIGLIN_HURT": return EsSound.createUnchecked("entity.zombified_piglin.hurt");
            case "EVENT_RAID_HORN": return EsSound.createUnchecked("event.raid.horn");
            case "ITEM_ARMOR_EQUIP_CHAIN": return EsSound.createUnchecked("item.armor.equip_chain");
            case "ITEM_ARMOR_EQUIP_DIAMOND": return EsSound.createUnchecked("item.armor.equip_diamond");
            case "ITEM_ARMOR_EQUIP_ELYTRA": return EsSound.createUnchecked("item.armor.equip_elytra");
            case "ITEM_ARMOR_EQUIP_GENERIC": return EsSound.createUnchecked("item.armor.equip_generic");
            case "ITEM_ARMOR_EQUIP_GOLD": return EsSound.createUnchecked("item.armor.equip_gold");
            case "ITEM_ARMOR_EQUIP_IRON": return EsSound.createUnchecked("item.armor.equip_iron");
            case "ITEM_ARMOR_EQUIP_LEATHER": return EsSound.createUnchecked("item.armor.equip_leather");
            case "ITEM_ARMOR_EQUIP_NETHERITE": return EsSound.createUnchecked("item.armor.equip_netherite");
            case "ITEM_ARMOR_EQUIP_TURTLE": return EsSound.createUnchecked("item.armor.equip_turtle");
            case "ITEM_AXE_STRIP": return EsSound.createUnchecked("item.axe.strip");
            case "ITEM_BOOK_PAGE_TURN": return EsSound.createUnchecked("item.book.page_turn");
            case "ITEM_BOOK_PUT": return EsSound.createUnchecked("item.book.put");
            case "ITEM_BOTTLE_EMPTY": return EsSound.createUnchecked("item.bottle.empty");
            case "ITEM_BOTTLE_FILL": return EsSound.createUnchecked("item.bottle.fill");
            case "ITEM_BOTTLE_FILL_DRAGONBREATH": return EsSound.createUnchecked("item.bottle.fill_dragonbreath");
            case "ITEM_BUCKET_EMPTY": return EsSound.createUnchecked("item.bucket.empty");
            case "ITEM_BUCKET_EMPTY_FISH": return EsSound.createUnchecked("item.bucket.empty_fish");
            case "ITEM_BUCKET_EMPTY_LAVA": return EsSound.createUnchecked("item.bucket.empty_lava");
            case "ITEM_BUCKET_FILL": return EsSound.createUnchecked("item.bucket.fill");
            case "ITEM_BUCKET_FILL_FISH": return EsSound.createUnchecked("item.bucket.fill_fish");
            case "ITEM_BUCKET_FILL_LAVA": return EsSound.createUnchecked("item.bucket.fill_lava");
            case "ITEM_CHORUS_FRUIT_TELEPORT": return EsSound.createUnchecked("item.chorus_fruit.teleport");
            case "ITEM_CROP_PLANT": return EsSound.createUnchecked("item.crop.plant");
            case "ITEM_CROSSBOW_HIT": return EsSound.createUnchecked("item.crossbow.hit");
            case "ITEM_CROSSBOW_LOADING_END": return EsSound.createUnchecked("item.crossbow.loading_end");
            case "ITEM_CROSSBOW_LOADING_MIDDLE": return EsSound.createUnchecked("item.crossbow.loading_middle");
            case "ITEM_CROSSBOW_LOADING_START": return EsSound.createUnchecked("item.crossbow.loading_start");
            case "ITEM_CROSSBOW_QUICK_CHARGE_1": return EsSound.createUnchecked("item.crossbow.quick_charge_1");
            case "ITEM_CROSSBOW_QUICK_CHARGE_2": return EsSound.createUnchecked("item.crossbow.quick_charge_2");
            case "ITEM_CROSSBOW_QUICK_CHARGE_3": return EsSound.createUnchecked("item.crossbow.quick_charge_3");
            case "ITEM_CROSSBOW_SHOOT": return EsSound.createUnchecked("item.crossbow.shoot");
            case "ITEM_ELYTRA_FLYING": return EsSound.createUnchecked("item.elytra.flying");
            case "ITEM_FIRECHARGE_USE": return EsSound.createUnchecked("item.firecharge.use");
            case "ITEM_FLINTANDSTEEL_USE": return EsSound.createUnchecked("item.flintandsteel.use");
            case "ITEM_HOE_TILL": return EsSound.createUnchecked("item.hoe.till");
            case "ITEM_HONEY_BOTTLE_DRINK": return EsSound.createUnchecked("item.honey_bottle.drink");
            case "ITEM_LODESTONE_COMPASS_LOCK": return EsSound.createUnchecked("item.lodestone_compass.lock");
            case "ITEM_NETHER_WART_PLANT": return EsSound.createUnchecked("item.nether_wart.plant");
            case "ITEM_SHIELD_BLOCK": return EsSound.createUnchecked("item.shield.block");
            case "ITEM_SHIELD_BREAK": return EsSound.createUnchecked("item.shield.break");
            case "ITEM_SHOVEL_FLATTEN": return EsSound.createUnchecked("item.shovel.flatten");
            case "ITEM_SWEET_BERRIES_PICK_FROM_BUSH": return EsSound.createUnchecked("item.sweet_berries.pick_from_bush");
            case "ITEM_TOTEM_USE": return EsSound.createUnchecked("item.totem.use");
            case "ITEM_TRIDENT_HIT": return EsSound.createUnchecked("item.trident.hit");
            case "ITEM_TRIDENT_HIT_GROUND": return EsSound.createUnchecked("item.trident.hit_ground");
            case "ITEM_TRIDENT_RETURN": return EsSound.createUnchecked("item.trident.return");
            case "ITEM_TRIDENT_RIPTIDE_1": return EsSound.createUnchecked("item.trident.riptide_1");
            case "ITEM_TRIDENT_RIPTIDE_2": return EsSound.createUnchecked("item.trident.riptide_2");
            case "ITEM_TRIDENT_RIPTIDE_3": return EsSound.createUnchecked("item.trident.riptide_3");
            case "ITEM_TRIDENT_THROW": return EsSound.createUnchecked("item.trident.throw");
            case "ITEM_TRIDENT_THUNDER": return EsSound.createUnchecked("item.trident.thunder");
            case "MUSIC_CREATIVE": return EsSound.createUnchecked("music.creative");
            case "MUSIC_CREDITS": return EsSound.createUnchecked("music.credits");
            case "MUSIC_DISC_11": return EsSound.createUnchecked("music_disc.11");
            case "MUSIC_DISC_13": return EsSound.createUnchecked("music_disc.13");
            case "MUSIC_DISC_BLOCKS": return EsSound.createUnchecked("music_disc.blocks");
            case "MUSIC_DISC_CAT": return EsSound.createUnchecked("music_disc.cat");
            case "MUSIC_DISC_CHIRP": return EsSound.createUnchecked("music_disc.chirp");
            case "MUSIC_DISC_FAR": return EsSound.createUnchecked("music_disc.far");
            case "MUSIC_DISC_MALL": return EsSound.createUnchecked("music_disc.mall");
            case "MUSIC_DISC_MELLOHI": return EsSound.createUnchecked("music_disc.mellohi");
            case "MUSIC_DISC_PIGSTEP": return EsSound.createUnchecked("music_disc.pigstep");
            case "MUSIC_DISC_STAL": return EsSound.createUnchecked("music_disc.stal");
            case "MUSIC_DISC_STRAD": return EsSound.createUnchecked("music_disc.strad");
            case "MUSIC_DISC_WAIT": return EsSound.createUnchecked("music_disc.wait");
            case "MUSIC_DISC_WARD": return EsSound.createUnchecked("music_disc.ward");
            case "MUSIC_DRAGON": return EsSound.createUnchecked("music.dragon");
            case "MUSIC_END": return EsSound.createUnchecked("music.end");
            case "MUSIC_GAME": return EsSound.createUnchecked("music.game");
            case "MUSIC_MENU": return EsSound.createUnchecked("music.menu");
            case "MUSIC_NETHER_BASALT_DELTAS": return EsSound.createUnchecked("music.nether.basalt_deltas");
            case "MUSIC_NETHER_CRIMSON_FOREST": return EsSound.createUnchecked("music.nether.crimson_forest");
            case "MUSIC_NETHER_NETHER_WASTES": return EsSound.createUnchecked("music.nether.nether_wastes");
            case "MUSIC_NETHER_SOUL_SAND_VALLEY": return EsSound.createUnchecked("music.nether.soul_sand_valley");
            case "MUSIC_NETHER_WARPED_FOREST": return EsSound.createUnchecked("music.nether.warped_forest");
            case "MUSIC_UNDER_WATER": return EsSound.createUnchecked("music.under_water");
            case "PARTICLE_SOUL_ESCAPE": return EsSound.createUnchecked("particle.soul_escape");
            case "UI_BUTTON_CLICK": return EsSound.createUnchecked("ui.button.click");
            case "UI_CARTOGRAPHY_TABLE_TAKE_RESULT": return EsSound.createUnchecked("ui.cartography_table.take_result");
            case "UI_LOOM_SELECT_PATTERN": return EsSound.createUnchecked("ui.loom.select_pattern");
            case "UI_LOOM_TAKE_RESULT": return EsSound.createUnchecked("ui.loom.take_result");
            case "UI_STONECUTTER_SELECT_RECIPE": return EsSound.createUnchecked("ui.stonecutter.select_recipe");
            case "UI_STONECUTTER_TAKE_RESULT": return EsSound.createUnchecked("ui.stonecutter.take_result");
            case "UI_TOAST_CHALLENGE_COMPLETE": return EsSound.createUnchecked("ui.toast.challenge_complete");
            case "UI_TOAST_IN": return EsSound.createUnchecked("ui.toast.in");
            case "UI_TOAST_OUT": return EsSound.createUnchecked("ui.toast.out");
            case "WEATHER_RAIN": return EsSound.createUnchecked("weather.rain");
            case "WEATHER_RAIN_ABOVE": return EsSound.createUnchecked("weather.rain.above");

            // Older versions had different sounds, these I have converted.
            case "RECORD_11": return EsSound.createUnchecked("music_disc.11");
            case "RECORD_13": return EsSound.createUnchecked("music_disc.13");
            case "RECORD_BLOCKS": return EsSound.createUnchecked("music_disc.blocks");
            case "RECORD_CAT": return EsSound.createUnchecked("music_disc.cat");
            case "RECORD_CHIRP": return EsSound.createUnchecked("music_disc.chirp");
            case "RECORD_FAR": return EsSound.createUnchecked("music_disc.far");
            case "RECORD_MALL": return EsSound.createUnchecked("music_disc.mall");
            case "RECORD_MELLOHI": return EsSound.createUnchecked("music_disc.mellohi");
            case "RECORD_STAL": return EsSound.createUnchecked("music_disc.stal");
            case "RECORD_STRAD": return EsSound.createUnchecked("music_disc.strad");
            case "RECORD_WAIT": return EsSound.createUnchecked("music_disc.wait");
            case "RECORD_WARD": return EsSound.createUnchecked("music_disc.ward");

            // this sound used to be called something else, until we need it we can generate an incorrect name.
            default: return EsSound.createUnchecked(eVal.replace('_', '.'));
        }
    }
}
